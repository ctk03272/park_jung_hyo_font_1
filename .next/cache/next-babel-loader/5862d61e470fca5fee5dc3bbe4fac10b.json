{"ast":null,"code":"var _class, _temp;\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Slider from 'react-rangeslider';\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\nimport SVG from '../components/SVG';\nimport { ChromePicker } from 'react-color';\nimport moment from 'moment';\nimport store from \"../common/store\";\nimport Backdrop from './Backdrop';\n\nlet Header = observer(_class = (_temp = class Header extends App {\n  constructor(props) {\n    super(props);\n\n    this.__registerAutoFontSize = () => {\n      this.fontSizeTimer = setInterval(() => {\n        if (store.directionFontSize == 'positive') {\n          store.fontSizeState = store.fontSizeState + store.unitFontSize;\n        } else {\n          store.fontSizeState = store.fontSizeState - store.unitFontSize;\n        }\n\n        if (store.fontSizeState >= store.maxFontSize) {\n          store.directionFontSize = 'negative';\n        }\n\n        if (store.fontSizeState <= store.minFontSize) {\n          store.directionFontSize = 'positive';\n        }\n      }, 200 * (100 / store.secondFontSize));\n    };\n\n    this.__registerAutoFontWeight = () => {\n      this.fontWeightTimer = setInterval(() => {\n        if (store.directionFontWeight == 'positive') {\n          store.fontWeightState = store.fontWeightState + store.unitFontWeight;\n        } else {\n          store.fontWeightState = store.fontWeightState - store.unitFontWeight;\n        }\n\n        if (store.fontWeightState >= store.maxFontWeight) {\n          store.directionFontWeight = 'negative';\n        }\n\n        if (store.fontWeightState <= store.minFontWeight) {\n          store.directionFontWeight = 'positive';\n        }\n      }, 200 * (100 / store.secondFontWeight));\n    };\n\n    this.__registerAutoFontLetter = () => {\n      this.fontLetterTimer = setInterval(() => {\n        if (store.directionFontLetterSpacing == 'positive') {\n          store.fontLetterSpacingState = store.fontLetterSpacingState + store.unitFontLetterSpacing;\n        } else {\n          store.fontLetterSpacingState = store.fontLetterSpacingState - store.unitFontLetterSpacing;\n        }\n\n        if (store.fontLetterSpacingState >= store.maxFontLetterSpacing) {\n          store.directionFontLetterSpacing = 'negative';\n        }\n\n        if (store.fontLetterSpacingState <= store.minFontLetterSpacing) {\n          store.directionFontLetterSpacing = 'positive';\n        }\n      }, 200 * (100 / store.secondFontLetterSpacing));\n    };\n\n    this.__registerAutoFontLine = () => {\n      this.fontLineTimer = setInterval(() => {\n        if (store.directionFontLineSpacing == 'positive') {\n          store.fontLineSpacingState = store.fontLineSpacingState + store.unitFontLineSpacing;\n        } else {\n          store.fontLineSpacingState = store.fontLineSpacingState - store.unitFontLineSpacing;\n        }\n\n        if (store.fontLineSpacingState >= store.maxFontLineSpacing) {\n          store.directionFontLineSpacing = 'negative';\n        }\n\n        if (store.fontLineSpacingState <= store.minFontLineSpacing) {\n          store.directionFontLineSpacing = 'positive';\n        }\n      }, 200 * (100 / store.secondFontLineSpacing));\n    };\n\n    this.__registerAutoFontVS_width = () => {\n      this.fontVSWidthTimer = setInterval(() => {\n        if (store.directionfontVariationSettings_widthState == 'positive') {\n          store.fontVariationSettings_widthState = store.fontVariationSettings_widthState + store.unitfontVariationSettings_widthState;\n        } else {\n          store.fontVariationSettings_widthState = store.fontVariationSettings_widthState - store.unitfontVariationSettings_widthState;\n        }\n\n        if (store.fontVariationSettings_widthState >= store.maxfontVariationSettings_widthState) {\n          store.directionfontVariationSettings_widthState = 'negative';\n        }\n\n        if (store.fontVariationSettings_widthState <= store.minfontVariationSettings_widthState) {\n          store.directionfontVariationSettings_widthState = 'positive';\n        }\n      }, 200 * (100 / store.secondfontVariationSettings_widthState));\n    };\n\n    this.__registerAutoFontVS_weight = () => {\n      this.fontVSWeightTimer = setInterval(() => {\n        if (store.directionfontVariationSettings_weightState == 'positive') {\n          store.fontVariationSettings_weightState = store.fontVariationSettings_weightState + store.unitfontVariationSettings_weightState;\n        } else {\n          store.fontVariationSettings_weightState = store.fontVariationSettings_weightState - store.unitfontVariationSettings_weightState;\n        }\n\n        if (store.fontVariationSettings_weightState >= store.maxfontVariationSettings_weightState) {\n          store.directionfontVariationSettings_weightState = 'negative';\n        }\n\n        if (store.fontVariationSettings_weightState <= store.minfontVariationSettings_weightState) {\n          store.directionfontVariationSettings_weightState = 'positive';\n        }\n      }, 200 * (100 / store.secondfontVariationSettings_weightState));\n    };\n\n    this.__registerAutoFontVS_italic = () => {\n      this.fontVSItalicTimer = setInterval(() => {\n        if (store.directionfontVariationSettings_italicState == 'positive') {\n          store.fontVariationSettings_italicState = store.fontVariationSettings_italicState + store.unitfontVariationSettings_italicState;\n        } else {\n          store.fontVariationSettings_italicState = store.fontVariationSettings_italicState - store.unitfontVariationSettings_italicState;\n        }\n\n        if (store.fontVariationSettings_italicState >= store.maxfontVariationSettings_italicState) {\n          store.directionfontVariationSettings_italicState = 'negative';\n        }\n\n        if (store.fontVariationSettings_italicState <= store.minfontVariationSettings_italicState) {\n          store.directionfontVariationSettings_italicState = 'positive';\n        }\n      }, 200 * (100 / store.secondfontVariationSettings_italicState));\n    };\n\n    this.handleChangeComplete = color => {\n      // this.setState({ fontColorState: color.hex });\n      store.fontColorState = color.hex;\n    };\n\n    this.handleFontSizeChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({ fontSizeState: event  })\n      store.fontSizeState = event;\n    };\n\n    this.handleFontWeightChange = event => {\n      // this.setState({  fontWeightState: value  })\n      store.fontWeightState = event;\n    };\n\n    this.handleFontLetterSpacingChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({  fontLetterSpacingState: event  })\n      store.fontLetterSpacingState = event;\n    };\n\n    this.handleFontLineSpacingChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({ fontLineSpacingState: event  })\n      store.fontLineSpacingState = event;\n    };\n\n    this.handleFVSWidthChange = event => {\n      // this.setState({  fontWeightState: value  })\n      store.fontVariationSettings_widthState = event;\n    };\n\n    this.handleFVSWeightChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({  fontLetterSpacingState: event  })\n      store.fontVariationSettings_weightState = event;\n    };\n\n    this.handleFVSItalicChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({ fontLineSpacingState: event  })\n      store.fontVariationSettings_italicState = event;\n    };\n\n    this._toggleFontSizeAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({ isFontSizeAuto: !this.state.isFontSizeAuto }) \n        if (store.isFontSizeAuto == true) {\n          clearInterval(this.fontSizeTimer);\n        } else {\n          clearInterval(this.fontSizeTimer);\n\n          this.__registerAutoFontSize();\n        }\n\n        store.isFontSizeAuto = !store.isFontSizeAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontSizeAuto: true }) \n          store.isFontSizeAuto = true;\n        } else {\n          // this.setState({ isFontSizeAuto: false  }) \n          store.isFontSizeAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontWeightAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({  isFontWeightAuto: !this.state.isFontWeightAuto }) \n        if (store.isFontWeightAuto == true) {\n          clearInterval(this.fontWeightTimer);\n        } else {\n          clearInterval(this.fontWeightTimer);\n\n          this.__registerAutoFontWeight();\n        }\n\n        store.isFontWeightAuto = !store.isFontWeightAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontWeightAuto: true }) \n          store.isFontWeightAuto = true;\n        } else {\n          // this.setState({   isFontWeightAuto: false }) \n          store.isFontWeightAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontLetterSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({ isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto }) \n        if (store.isFontLetterSpacingAuto == true) {\n          clearInterval(this.fontLetterTimer);\n        } else {\n          clearInterval(this.fontLetterTimer);\n\n          this.__registerAutoFontLetter();\n        }\n\n        store.isFontLetterSpacingAuto = !store.isFontLetterSpacingAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontLetterSpacingAuto: true }) \n          store.isFontLetterSpacingAuto = true;\n        } else {\n          // this.setState({  isFontLetterSpacingAuto: false }) \n          store.isFontLetterSpacingAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontLineSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n        if (store.isFontLineSpacingAuto == true) {\n          clearInterval(this.fontLineTimer);\n        } else {\n          clearInterval(this.fontLineTimer);\n\n          this.__registerAutoFontLine();\n        }\n\n        store.isFontLineSpacingAuto = !store.isFontLineSpacingAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontLineSpacingAuto: true  }) \n          store.isFontLineSpacingAuto = true;\n        } else {\n          // this.setState({ isFontLineSpacingAuto: false  }) \n          store.isFontLineSpacingAuto = false;\n        }\n      }\n    };\n\n    this._toggleFVSWidthAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n        if (store.isFontVS_WidthAuto == true) {\n          clearInterval(this.fontVSWidthTimer);\n        } else {\n          clearInterval(this.fontVSWidthTimer);\n\n          this.__registerAutoFontVS_width();\n        }\n\n        store.isFontVS_WidthAuto = !store.isFontVS_WidthAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontLineSpacingAuto: true  }) \n          store.isFontVS_WidthAuto = true;\n        } else {\n          // this.setState({ isFontLineSpacingAuto: false  }) \n          store.isFontVS_WidthAuto = false;\n        }\n      }\n    };\n\n    this._bannerGoItem = index => {\n      this.setState({\n        index_banner_content: index\n      });\n      this.startCount();\n    };\n\n    this.toogleSwitchState = param_onoff => {\n      clearInterval(this.timer);\n\n      if (param_onoff == true) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n        return;\n      }\n\n      if (param_onoff == false) {\n        this.setState({\n          is_banner_animation: false\n        });\n        return;\n      }\n\n      if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n      } else {\n        this.setState({\n          is_banner_animation: false\n        }); //geolocation.stopObserving();\n      }\n    };\n\n    this._goPage = (paramRouterName, paramQuery) => {\n      // import Router from 'next/router';\n      // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n      Router.push({\n        pathname: paramRouterName // query: { tab : paramQuery }\n\n      });\n    };\n\n    this.__togglePlayAll = () => {\n      if (store.isPlayAll == true) {\n        store.isPlayAll = false;\n        store.isFontSizeAuto = false;\n        store.isFontWeightAuto = false;\n        store.isFontLineSpacingAuto = false;\n        store.isFontLetterSpacingAuto = false;\n\n        if (this.fontSizeTimer) {\n          clearInterval(this.fontSizeTimer);\n        }\n\n        if (this.fontWeightTimer) {\n          clearInterval(this.fontWeightTimer);\n        }\n\n        if (this.fontLetterTimer) {\n          clearInterval(this.fontLetterTimer);\n        }\n\n        if (this.fontLineTimer) {\n          clearInterval(this.fontLineTimer);\n        }\n      } else {\n        store.isPlayAll = true;\n        store.isFontSizeAuto = true;\n        store.isFontWeightAuto = true;\n        store.isFontLineSpacingAuto = true;\n        store.isFontLetterSpacingAuto = true;\n\n        if (store.isFontSizeAuto == false) {\n          clearInterval(this.fontSizeTimer);\n        } else {\n          clearInterval(this.fontSizeTimer);\n\n          this.__registerAutoFontSize();\n        }\n\n        if (store.isFontWeightAuto == false) {\n          clearInterval(this.fontWeightTimer);\n        } else {\n          clearInterval(this.fontWeightTimer);\n\n          this.__registerAutoFontWeight();\n        }\n\n        if (store.isFontLetterSpacingAuto == false) {\n          clearInterval(this.fontLetterTimer);\n        } else {\n          clearInterval(this.fontLetterTimer);\n          setInterval(this.fontLetterTimer);\n\n          this.__registerAutoFontLetter();\n        }\n\n        if (store.isFontLineSpacingAuto == false) {\n          clearInterval(this.fontLineTimer);\n        } else {\n          clearInterval(this.fontLineTimer);\n\n          this.__registerAutoFontLine();\n        }\n      }\n    };\n\n    this.__toggleResetAll = () => {\n      store.isPlayAll = false;\n      store.fontSizeState = store.defaultFontSizeState;\n      store.fontWeightState = store.defaultFontWeightState;\n      store.fontLetterSpacingState = store.defaultFontLetterSpacingState;\n      store.fontLineSpacingState = store.defaultFontLineSpacingState;\n      store.fontColorState = store.defaultFontColorState;\n      store.fontState = store.defaultFontState;\n      store.isPlayAll = false;\n      store.isFontSizeAuto = false;\n      store.isFontWeightAuto = false;\n      store.isFontLineSpacingAuto = false;\n      store.isFontLetterSpacingAuto = false;\n      store.directionFontSize = 'positive'; // negative;\n\n      store.secondFontSize = 100;\n      store.directionFontWeight = 'positive'; // negative;\n\n      store.secondFontWeight = 100;\n      store.directionFontLetterSpacing = 'positive'; // negative;\n\n      store.secondFontLetterSpacing = 100;\n      store.directionFontLineSpacing = 'positive'; // negative;\n\n      store.secondFontLineSpacing = 100;\n\n      if (this.fontSizeTimer) {\n        clearInterval(this.fontSizeTimer);\n      }\n\n      if (this.fontWeightTimer) {\n        clearInterval(this.fontWeightTimer);\n      }\n\n      if (this.fontLetterTimer) {\n        clearInterval(this.fontLetterTimer);\n      }\n\n      if (this.fontLineTimer) {\n        clearInterval(this.fontLineTimer);\n      }\n    };\n\n    this.__toggleSecond = param => {\n      console.log('__toggleSecond');\n      var unit = 0;\n      param == 'font/size' ? unit = store.secondFontSize : null;\n      param == 'font/weight' ? unit = store.secondFontWeight : null;\n      param == 'font/letter-spacing' ? unit = store.secondFontLetterSpacing : null;\n      param == 'font/line-spacing' ? unit = store.secondFontLineSpacing : null;\n\n      if (unit == 100) {\n        unit = 200;\n      } else if (unit == 200) {\n        unit = 300;\n      } else if (unit == 300) {\n        unit = 100;\n      }\n\n      param == 'font/size' ? store.secondFontSize = unit : null;\n      param == 'font/weight' ? store.secondFontWeight = unit : null;\n      param == 'font/letter-spacing' ? store.secondFontLetterSpacing = unit : null;\n      param == 'font/line-spacing' ? store.secondFontLineSpacing = unit : null;\n\n      if (store.isFontSizeAuto == false) {\n        clearInterval(this.fontSizeTimer);\n      } else {\n        clearInterval(this.fontSizeTimer);\n\n        this.__registerAutoFontSize();\n      }\n\n      if (store.isFontWeightAuto == false) {\n        clearInterval(this.fontWeightTimer);\n      } else {\n        clearInterval(this.fontWeightTimer);\n\n        this.__registerAutoFontWeight();\n      }\n\n      if (store.isFontLetterSpacingAuto == false) {\n        clearInterval(this.fontLetterTimer);\n      } else {\n        clearInterval(this.fontLetterTimer);\n        setInterval(this.fontLetterTimer);\n\n        this.__registerAutoFontLetter();\n      }\n\n      if (store.isFontLineSpacingAuto == false) {\n        clearInterval(this.fontLineTimer);\n      } else {\n        clearInterval(this.fontLineTimer);\n\n        this.__registerAutoFontLine();\n      }\n    };\n\n    this.onPrint = () => {\n      const html = document.querySelector('html');\n      const printContents = document.querySelector('.font_display_container').innerHTML;\n      const printDiv = document.createElement('DIV');\n      printDiv.className = 'print-div';\n      html.appendChild(printDiv);\n      printDiv.innerHTML = printContents;\n      document.body.style.display = 'none';\n      window.print();\n      document.body.style.display = 'block';\n      printDiv.style.display = 'none';\n      console.log('TEST');\n    };\n\n    this.state = {\n      layoutMode: 'desktop',\n      input_content: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n      footerGap: 200,\n      fontSizeState: 50,\n      fontWeightState: 300,\n      fontLetterSpacingState: 0,\n      fontLineSpacingState: 0.85,\n      fontColorState: '#000',\n      fontState: null,\n      isFontSizeAuto: false,\n      isFontWeightAuto: false,\n      isFontLetterSpacingAuto: false,\n      isFontLineSpacingAuto: false\n    };\n    this.onResize = this.onResize.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    const {\n      query\n    } = props; // const { token, refreshToken } = query;\n  }\n\n  componentDidMount() {\n    var stored_token = '';\n    window.addEventListener('resize', this.onResize);\n    const wrapper = document.getElementById(\"wrapper\");\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n    const icon = document.getElementsByClassName(\"icon\");\n    wrapper.addEventListener('click', () => {\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n    mobile_drawer_menu_left.addEventListener('click', () => {\n      // const icon = document.getElementsByClassName(\"icon\");\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n\n    if (this.fontSizeTimer) {\n      clearInterval(this.fontSizeTimer);\n    }\n\n    if (this.fontWeightTimer) {\n      clearInterval(this.fontWeightTimer);\n    }\n\n    if (this.fontLetterTimer) {\n      clearInterval(this.fontLetterTimer);\n    }\n\n    if (this.fontLineTimer) {\n      clearInterval(this.fontLineTimer);\n    } // \n\n\n    if (this.fontVSWidthTimer) {\n      clearInterval(this.fontVSWidthTimer);\n    }\n\n    if (this.fontVSWeightTimer) {\n      clearInterval(this.fontVSWeightTimer);\n    }\n\n    if (this.fontVSItalicTimer) {\n      clearInterval(this.fontVSItalicTimer);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.fontSizeTimer) {\n      clearInterval(this.fontSizeTimer);\n    }\n\n    if (this.fontWeightTimer) {\n      clearInterval(this.fontWeightTimer);\n    }\n\n    if (this.fontLetterTimer) {\n      clearInterval(this.fontLetterTimer);\n    }\n\n    if (this.fontLineTimer) {\n      clearInterval(this.fontLineTimer);\n    } // \n\n\n    if (this.fontVSWidthTimer) {\n      clearInterval(this.fontVSWidthTimer);\n    }\n\n    if (this.fontVSWeightTimer) {\n      clearInterval(this.fontVSWeightTimer);\n    }\n\n    if (this.fontVSItalicTimer) {\n      clearInterval(this.fontVSItalicTimer);\n    }\n  }\n\n  startCount() {\n    // this.setState({\n    //   isOn: true,\n    //   count: 0\n    // });\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      this._bannerChange();\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize() {\n    this.setState({\n      layoutMode: this.getLayoutMode()\n    });\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const icon = document.getElementsByClassName(\"icon\");\n  }\n\n  getLayoutMode() {\n    return window.innerWidth > 1200 ? 'desktop' : 'non-desktop';\n  }\n\n  render() {\n    const {\n      path\n    } = this.props;\n    const stored_token = store.token;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n                    @font-face {\n                        font-family: \"Earth_FinalGX\";\n                        src: url(${this.props.prefix}/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                        }\n\n\n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 100;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.otf) format('opentype');}\n\n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 300;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 400;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 500;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 700;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 900;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.otf) format('opentype');}\n                    \n                    \n                          `), /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n                textarea {\n                    width: 100%;\n                    resize: none;\n                    overflow-y: hidden; /* prevents scroll bar flash */\n                    padding: 1.1em; /* prevents text jump on Enter keypress */\n                    padding-bottom: 0.2em;\n                    line-height: 1.6;\n                  }\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n                .mobile_drawer_menu_left {\n                    width: calc(100% - 300px);\n                    height: 100%;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 300px;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                    overflow-y: scroll;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n                    width: calc(100% - 40px);\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    margin: 8px 0;\n                    position: relative;\n                    background: #e6e6e6;\n                    -ms-touch-action: none;\n                    touch-action: none;\n                    }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal .rangeslider__handle {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 10px;\n                    top: 50%;\n                    transform: translate3d(-50%,-50%,0);\n                    }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n                    .rangeslider-horizontal .rangeslider__handle:after {\n                        content: '',\n                        position: absolute;\n                        width: 0px;\n                        height: 0px;\n                        top: 6px;\n                        left: 6px;\n                        border-radius: 50%;\n                        background-color: #dadada;\n                        box-shadow: 0 1px 3px rgba(0,0,0,.4) inset,0 -1px 3px rgba(0,0,0,.4) inset;\n                        }\n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'auto',\n        display: 'flex',\n        alignSelf: 'center',\n        left: '50%',\n        transform: 'translate(-50%, 0%)'\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      style: {\n        fontFamily: \"Earth_FinalGX\"\n      }\n    }, \"EARTH\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle icon\"\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line top\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line middle\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line bottom\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu\",\n      className: \"mobile_drawer_menu\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu_left\",\n      style: {\n        width: 'calc(100% - 300px)',\n        height: '100%'\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_drawer_menu_inner\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"menu-item-1\",\n      className: \"menu-item cursor_pointer not_draggable\",\n      style: {\n        fontFamily: \"Earth_FinalGX\",\n        color: path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n        fontWeight: path === '/' ? '600' : '500',\n        textDecoration: path === '/' ? 'underline' : 'none',\n        marginTop: 80,\n        marginLeft: 40\n      },\n      onClick: () => {\n        this._goPage('/');\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 15\n      }\n    }, \"PARK JUNG HYO's 1st Planet\", /*#__PURE__*/React.createElement(\"br\", null), \"2020 Typeface Earth\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 20,\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        maxWidth: 400,\n        marginLeft: 40,\n        marginTop: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        marginBottom: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 80,\n        height: 20,\n        fontSize: 10,\n        fontWeight: 700,\n        backgroundColor: store.isPlayAll == true ? '#000' : '#E4E4E4',\n        color: store.isPlayAll == true ? '#fff' : '#000',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8\n      },\n      onClick: () => {\n        this.__togglePlayAll();\n      }\n    }, store.isPlayAll == true ? 'Pause all' : 'Play all'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 80,\n        height: 20,\n        fontSize: 10,\n        fontWeight: 700,\n        backgroundColor: '#E4E4E4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: 8,\n        borderRadius: 8\n      },\n      onClick: () => {\n        this.__toggleResetAll();\n      }\n    }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Font Size\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 100,\n      value: store.fontSizeState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontSizeChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontSizeState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontSizeAuto ? '#000' : '#E4E4E4',\n        color: store.isFontSizeAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontSizeAuto();\n      }\n    }, store.isFontSizeAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/size');\n      }\n    }, store.secondFontSize == 100 ? \"x1\" : \"\", store.secondFontSize == 200 ? \"x2\" : \"\", store.secondFontSize == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        fontSize: 10,\n        fontWeight: 700,\n        marginTop: 20\n      }\n    }, \"Font Weight\", /*#__PURE__*/React.createElement(Slider, {\n      min: 100,\n      max: 500,\n      value: store.fontWeightState,\n      style: {\n        color: '#000'\n      },\n      onChangeStart: this.handleChangeStart,\n      onChange: this.handleFontWeightChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontWeightState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontWeightAuto ? '#000' : '#E4E4E4',\n        color: store.isFontWeightAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontWeightAuto();\n      }\n    }, store.isFontWeightAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/weight');\n      }\n    }, store.secondFontWeight == 100 ? \"x1\" : \"\", store.secondFontWeight == 200 ? \"x2\" : \"\", store.secondFontWeight == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        marginTop: 20,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Letter Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: -0.1,\n      max: 0.2,\n      value: store.fontLetterSpacingState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLetterSpacingChange,\n      step: 0.01\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLetterSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#E4E4E4',\n        color: store.isFontLetterSpacingAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontLetterSpacingAuto();\n      }\n    }, store.isFontLetterSpacingAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/letter-spacing');\n      }\n    }, store.secondFontLetterSpacing == 100 ? \"x1\" : \"\", store.secondFontLetterSpacing == 200 ? \"x2\" : \"\", store.secondFontLetterSpacing == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        marginTop: 20,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Line Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0.85,\n      max: 1.5,\n      value: store.fontLineSpacingState,\n      step: 0.01,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLineSpacingChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLineSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#E4E4E4',\n        color: store.isFontLineSpacingAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontLineSpacingAuto();\n      }\n    }, store.isFontLineSpacingAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/line-spacing');\n      }\n    }, store.secondFontLineSpacing == 100 ? \"x1\" : \"\", store.secondFontLineSpacing == 200 ? \"x2\" : \"\", store.secondFontLineSpacing == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        fontSize: 10,\n        marginBottom: 10,\n        fontWeight: 700\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(ChromePicker, {\n      color: store.fontColorState,\n      onChangeComplete: this.handleChangeComplete\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10,\n        marginTop: 45,\n        fontWeight: 600\n      },\n      onClick: () => {\n        const icon = document.getElementsByClassName(\"icon\");\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        icon[0].classList.toggle('close');\n        mobile_drawer_menu.classList.toggle('open');\n        this.onPrint();\n      }\n    }, \"Print\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 100\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_display_controller\"\n    })))))))));\n  }\n\n}, _temp)) || _class;\n\nexport default Header;","map":{"version":3,"sources":["/Users/nough/Desktop/font_pjh_site/components/Header.js"],"names":["React","Component","Router","App","observable","observer","Slider","VerticalSlider","HorizontalSlider","SVG","ChromePicker","moment","store","Backdrop","Header","constructor","props","__registerAutoFontSize","fontSizeTimer","setInterval","directionFontSize","fontSizeState","unitFontSize","maxFontSize","minFontSize","secondFontSize","__registerAutoFontWeight","fontWeightTimer","directionFontWeight","fontWeightState","unitFontWeight","maxFontWeight","minFontWeight","secondFontWeight","__registerAutoFontLetter","fontLetterTimer","directionFontLetterSpacing","fontLetterSpacingState","unitFontLetterSpacing","maxFontLetterSpacing","minFontLetterSpacing","secondFontLetterSpacing","__registerAutoFontLine","fontLineTimer","directionFontLineSpacing","fontLineSpacingState","unitFontLineSpacing","maxFontLineSpacing","minFontLineSpacing","secondFontLineSpacing","__registerAutoFontVS_width","fontVSWidthTimer","directionfontVariationSettings_widthState","fontVariationSettings_widthState","unitfontVariationSettings_widthState","maxfontVariationSettings_widthState","minfontVariationSettings_widthState","secondfontVariationSettings_widthState","__registerAutoFontVS_weight","fontVSWeightTimer","directionfontVariationSettings_weightState","fontVariationSettings_weightState","unitfontVariationSettings_weightState","maxfontVariationSettings_weightState","minfontVariationSettings_weightState","secondfontVariationSettings_weightState","__registerAutoFontVS_italic","fontVSItalicTimer","directionfontVariationSettings_italicState","fontVariationSettings_italicState","unitfontVariationSettings_italicState","maxfontVariationSettings_italicState","minfontVariationSettings_italicState","secondfontVariationSettings_italicState","handleChangeComplete","color","fontColorState","hex","handleFontSizeChange","event","handleFontWeightChange","handleFontLetterSpacingChange","handleFontLineSpacingChange","handleFVSWidthChange","handleFVSWeightChange","handleFVSItalicChange","_toggleFontSizeAuto","undefined","isFontSizeAuto","clearInterval","_toggleFontWeightAuto","isFontWeightAuto","_toggleFontLetterSpacingAuto","isFontLetterSpacingAuto","_toggleFontLineSpacingAuto","isFontLineSpacingAuto","_toggleFVSWidthAuto","isFontVS_WidthAuto","_bannerGoItem","index","setState","index_banner_content","startCount","toogleSwitchState","param_onoff","timer","is_banner_animation","state","_goPage","paramRouterName","paramQuery","push","pathname","__togglePlayAll","isPlayAll","__toggleResetAll","defaultFontSizeState","defaultFontWeightState","defaultFontLetterSpacingState","defaultFontLineSpacingState","defaultFontColorState","fontState","defaultFontState","__toggleSecond","param","console","log","unit","onPrint","html","document","querySelector","printContents","innerHTML","printDiv","createElement","className","appendChild","body","style","display","window","print","layoutMode","input_content","footerGap","onResize","bind","getInitialProps","query","componentDidMount","stored_token","addEventListener","wrapper","getElementById","mobile_drawer_menu","mobile_drawer_menu_left","icon","getElementsByClassName","classList","toggle","componentWillUnmount","_bannerChange","removeEventListener","getLayoutMode","innerWidth","render","path","token","prefix","position","width","alignSelf","left","transform","fontFamily","height","fontWeight","textDecoration","marginTop","marginLeft","fontSize","alignItems","justifyContent","maxWidth","marginBottom","backgroundColor","borderRadius","handleChangeStart","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app'\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Slider from 'react-rangeslider'\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\nimport SVG from '../components/SVG';\n\n\nimport { ChromePicker } from 'react-color'; \nimport moment from 'moment';\nimport store from \"../common/store\";\n\nimport Backdrop from './Backdrop';\n\n\n@observer\nclass Header extends App {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            layoutMode: 'desktop',\n            input_content : 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n\n            footerGap : 200, \n\n            fontSizeState : 50,\n            fontWeightState: 300,\n            fontLetterSpacingState : 0,\n            fontLineSpacingState: 0.85,\n            fontColorState : '#000',\n            fontState : null,\n\n            isFontSizeAuto : false,\n            isFontWeightAuto : false,\n            isFontLetterSpacingAuto : false,\n            isFontLineSpacingAuto : false,\n        };\n\n        this.onResize = this.onResize.bind(this);\n    }\n    static async getInitialProps(props) {\n        const { query } = props;\n        // const { token, refreshToken } = query;\n        \n    }\n\n    componentDidMount() {\n\n        var stored_token = ''\n\n        window.addEventListener('resize', this.onResize);\n        const wrapper = document.getElementById(\"wrapper\");\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n        const icon = document.getElementsByClassName(\"icon\");\n        wrapper.addEventListener('click',  () => {\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n        mobile_drawer_menu_left.addEventListener('click',  () => {\n            // const icon = document.getElementsByClassName(\"icon\");\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n\n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n        // \n        if (this.fontVSWidthTimer) {\n            clearInterval(this.fontVSWidthTimer);\n        }\n        if (this.fontVSWeightTimer) {\n            clearInterval(this.fontVSWeightTimer);\n        }\n        if (this.fontVSItalicTimer) {\n            clearInterval(this.fontVSItalicTimer);\n        }\n    }\n\n    componentWillUnmount () {\n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n        // \n        if (this.fontVSWidthTimer) {\n            clearInterval(this.fontVSWidthTimer);\n        }\n        if (this.fontVSWeightTimer) {\n            clearInterval(this.fontVSWeightTimer);\n        }\n        if (this.fontVSItalicTimer) {\n            clearInterval(this.fontVSItalicTimer);\n        }\n    }\n\n    __registerAutoFontSize = () => {\n\n        this.fontSizeTimer = setInterval( () => { \n            if (store.directionFontSize == 'positive') {\n                store.fontSizeState = store.fontSizeState + store.unitFontSize\n            } else {\n                store.fontSizeState = store.fontSizeState - store.unitFontSize\n            }\n    \n            if (store.fontSizeState >= store.maxFontSize) {\n                store.directionFontSize = 'negative'\n            } \n            \n            if (store.fontSizeState <= store.minFontSize) {\n                store.directionFontSize = 'positive'\n            } \n            \n        },   200 * ( 100 /  store.secondFontSize));\n    }\n\n\n    __registerAutoFontWeight = () => {\n        this.fontWeightTimer = setInterval( () => { \n            if (store.directionFontWeight == 'positive') {\n                store.fontWeightState = store.fontWeightState + store.unitFontWeight\n            } else {\n                store.fontWeightState = store.fontWeightState - store.unitFontWeight\n            }\n\n            if (store.fontWeightState >= store.maxFontWeight) {\n                store.directionFontWeight = 'negative'\n            } \n            \n            if (store.fontWeightState <= store.minFontWeight) {\n                store.directionFontWeight = 'positive'\n            } \n            \n        },   200 * ( 100 /  store.secondFontWeight));\n    }\n\n    __registerAutoFontLetter = () => {\n        this.fontLetterTimer = setInterval( () => { \n            if (store.directionFontLetterSpacing == 'positive') {\n                store.fontLetterSpacingState = store.fontLetterSpacingState + store.unitFontLetterSpacing\n            } else {\n                store.fontLetterSpacingState = store.fontLetterSpacingState - store.unitFontLetterSpacing\n            }\n    \n            if (store.fontLetterSpacingState >= store.maxFontLetterSpacing) {\n                store.directionFontLetterSpacing = 'negative'\n            } \n            \n            if (store.fontLetterSpacingState <= store.minFontLetterSpacing) {\n                store.directionFontLetterSpacing = 'positive'\n            } \n            \n        },  200 * ( 100 /  store.secondFontLetterSpacing) );\n    }\n\n    __registerAutoFontLine = () => {\n\n        this.fontLineTimer = setInterval( () => { \n            if (store.directionFontLineSpacing == 'positive') {\n                store.fontLineSpacingState = store.fontLineSpacingState + store.unitFontLineSpacing\n            } else {\n                store.fontLineSpacingState = store.fontLineSpacingState - store.unitFontLineSpacing\n            }\n    \n            if (store.fontLineSpacingState >= store.maxFontLineSpacing) {\n                store.directionFontLineSpacing = 'negative'\n            } \n            \n            if (store.fontLineSpacingState <= store.minFontLineSpacing) {\n                store.directionFontLineSpacing = 'positive'\n            } \n            \n        }, 200 * ( 100 /  store.secondFontLineSpacing) );\n    }\n\n    __registerAutoFontVS_width =() => {\n\n        this.fontVSWidthTimer = setInterval( () => { \n            if (store.directionfontVariationSettings_widthState == 'positive') {\n                store.fontVariationSettings_widthState = store.fontVariationSettings_widthState + store.unitfontVariationSettings_widthState\n            } else {\n                store.fontVariationSettings_widthState = store.fontVariationSettings_widthState - store.unitfontVariationSettings_widthState\n            }\n    \n            if (store.fontVariationSettings_widthState >= store.maxfontVariationSettings_widthState) {\n                store.directionfontVariationSettings_widthState = 'negative'\n            } \n            \n            if (store.fontVariationSettings_widthState <= store.minfontVariationSettings_widthState) {\n                store.directionfontVariationSettings_widthState = 'positive'\n            } \n            \n        }, 200 * ( 100 /  store.secondfontVariationSettings_widthState) );\n    }\n\n    __registerAutoFontVS_weight =() => {\n\n        this.fontVSWeightTimer = setInterval( () => { \n            if (store.directionfontVariationSettings_weightState == 'positive') {\n                store.fontVariationSettings_weightState= store.fontVariationSettings_weightState + store.unitfontVariationSettings_weightState\n            } else {\n                store.fontVariationSettings_weightState = store.fontVariationSettings_weightState - store.unitfontVariationSettings_weightState\n            }\n    \n            if (store.fontVariationSettings_weightState >= store.maxfontVariationSettings_weightState) {\n                store.directionfontVariationSettings_weightState = 'negative'\n            } \n            \n            if (store.fontVariationSettings_weightState <= store.minfontVariationSettings_weightState) {\n                store.directionfontVariationSettings_weightState = 'positive'\n            } \n            \n        }, 200 * ( 100 /  store.secondfontVariationSettings_weightState) );\n    }\n\n    __registerAutoFontVS_italic =() => {\n\n        this.fontVSItalicTimer = setInterval( () => { \n            if (store.directionfontVariationSettings_italicState== 'positive') {\n                store.fontVariationSettings_italicState= store.fontVariationSettings_italicState + store.unitfontVariationSettings_italicState\n            } else {\n                store.fontVariationSettings_italicState = store.fontVariationSettings_italicState - store.unitfontVariationSettings_italicState\n            }\n    \n            if (store.fontVariationSettings_italicState >= store.maxfontVariationSettings_italicState) {\n                store.directionfontVariationSettings_italicState = 'negative'\n            } \n            \n            if (store.fontVariationSettings_italicState <= store.minfontVariationSettings_italicState) {\n                store.directionfontVariationSettings_italicState = 'positive'\n            } \n            \n        }, 200 * ( 100 /  store.secondfontVariationSettings_italicState) );\n    }\n\n\n\n    handleChangeComplete = (color) => {\n        // this.setState({ fontColorState: color.hex });\n        store.fontColorState = color.hex;\n      };\n    \n\n      handleFontSizeChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({ fontSizeState: event  })\n        store.fontSizeState = event;\n      };\n      handleFontWeightChange = event => {\n        // this.setState({  fontWeightState: value  })\n        store.fontWeightState = event;\n      };\n\n\n      handleFontLetterSpacingChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({  fontLetterSpacingState: event  })\n        store.fontLetterSpacingState = event;\n      };\n\n\n      handleFontLineSpacingChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({ fontLineSpacingState: event  })\n        store.fontLineSpacingState = event;\n      };\n\n     handleFVSWidthChange = event => {\n        // this.setState({  fontWeightState: value  })\n        store.fontVariationSettings_widthState = event;\n      };\n\n\n      handleFVSWeightChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({  fontLetterSpacingState: event  })\n        store.fontVariationSettings_weightState = event;\n      };\n\n\n      handleFVSItalicChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({ fontLineSpacingState: event  })\n        store.fontVariationSettings_italicState = event;\n      };\n\n      _toggleFontSizeAuto  = event => {\n        if (event == null || event === undefined) {\n            // this.setState({ isFontSizeAuto: !this.state.isFontSizeAuto }) \n            if (store.isFontSizeAuto == true) {\n                clearInterval(this.fontSizeTimer);\n            } else {\n                clearInterval(this.fontSizeTimer);\n                this.__registerAutoFontSize();\n            }\n            store.isFontSizeAuto = !store.isFontSizeAuto;\n        } else {\n            if (event == true) {\n                // this.setState({ isFontSizeAuto: true }) \n                store.isFontSizeAuto = true;\n            } else {\n                // this.setState({ isFontSizeAuto: false  }) \n                store.isFontSizeAuto = false;\n\n            }\n        } \n      }\n\n\n      _toggleFontWeightAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({  isFontWeightAuto: !this.state.isFontWeightAuto }) \n            if (store.isFontWeightAuto == true) {\n                clearInterval(this.fontWeightTimer);\n            } else {\n                clearInterval(this.fontWeightTimer);\n                this.__registerAutoFontWeight();\n            }\n            store.isFontWeightAuto = !store.isFontWeightAuto\n        } else {\n            if (event == true) {\n                // this.setState({ isFontWeightAuto: true }) \n                store.isFontWeightAuto = true\n            } else {\n                // this.setState({   isFontWeightAuto: false }) \n                store.isFontWeightAuto = false\n            }\n        } \n      }\n\n      _toggleFontLetterSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({ isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto }) \n            if (store.isFontLetterSpacingAuto == true) {\n                clearInterval(this.fontLetterTimer);\n            } else {\n                clearInterval(this.fontLetterTimer);\n                this.__registerAutoFontLetter();\n            }\n            store.isFontLetterSpacingAuto = !store.isFontLetterSpacingAuto\n        } else {\n            if (event == true) {\n                // this.setState({ isFontLetterSpacingAuto: true }) \n                store.isFontLetterSpacingAuto = true;\n            } else {\n                // this.setState({  isFontLetterSpacingAuto: false }) \n                store.isFontLetterSpacingAuto = false;\n            }\n        } \n      }\n\n      _toggleFontLineSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n            if (store.isFontLineSpacingAuto == true) {\n                clearInterval(this.fontLineTimer);\n            } else {\n                clearInterval(this.fontLineTimer);\n                this.__registerAutoFontLine();\n            }\n            store.isFontLineSpacingAuto = !store.isFontLineSpacingAuto;\n        } else {\n            if (event == true) {\n                // this.setState({ isFontLineSpacingAuto: true  }) \n                store.isFontLineSpacingAuto = true;\n            } else { \n                // this.setState({ isFontLineSpacingAuto: false  }) \n                store.isFontLineSpacingAuto = false;\n            }\n        } \n      }\n\n      _toggleFVSWidthAuto = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n            if (store.isFontVS_WidthAuto == true) {\n                clearInterval(this.fontVSWidthTimer);\n            } else {\n                clearInterval(this.fontVSWidthTimer);\n                this.__registerAutoFontVS_width();\n            }\n            store.isFontVS_WidthAuto = !store.isFontVS_WidthAuto;\n        } else {\n            if (event == true) {\n                // this.setState({ isFontLineSpacingAuto: true  }) \n                store.isFontVS_WidthAuto = true;\n            } else { \n                // this.setState({ isFontLineSpacingAuto: false  }) \n                store.isFontVS_WidthAuto = false;\n            }\n        } \n      }\n\n\n\n    _bannerGoItem = (index) => {\n        this.setState({\n            index_banner_content: index\n        });\n        this.startCount();\n    }\n\n      startCount() {\n        // this.setState({\n        //   isOn: true,\n        //   count: 0\n        // });\n        clearInterval(this.timer);\n        this.timer = setInterval( () => { \n            this._bannerChange();\n        }, 5000);\n      }\n      \n  toogleSwitchState = (param_onoff) => {\n    clearInterval(this.timer);\n\n    if (param_onoff == true) {\n\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n        return;\n    } \n\n    \n    if (param_onoff == false) {\n\n        this.setState({ is_banner_animation: false })\n        return;\n    } \n\n    \n\n    if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n    } else {\n        this.setState({ is_banner_animation: false })\n        //geolocation.stopObserving();\n    }\n  }\n\n\n\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize() {\n        this.setState({\n            layoutMode: this.getLayoutMode(),\n        });\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const icon = document.getElementsByClassName(\"icon\");\n    }\n\n    getLayoutMode() {\n        return window.innerWidth > 1200 ?\n            'desktop'\n            : 'non-desktop';\n    }\n\n\n    _goPage = (paramRouterName, paramQuery) => {\n        // import Router from 'next/router';\n        // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n        Router.push({\n        pathname: paramRouterName,\n        // query: { tab : paramQuery }\n        });\n    };\n\n    __togglePlayAll = () => {\n        if ( store.isPlayAll == true ) {\n            store.isPlayAll = false\n            store.isFontSizeAuto = false;\n            store.isFontWeightAuto = false;\n            store.isFontLineSpacingAuto = false;\n            store.isFontLetterSpacingAuto = false;\n\n            if (this.fontSizeTimer) {\n                clearInterval(this.fontSizeTimer);\n            }\n            if (this.fontWeightTimer) {\n                clearInterval(this.fontWeightTimer);\n            }\n            if (this.fontLetterTimer) {\n                clearInterval(this.fontLetterTimer);\n            }\n            if (this.fontLineTimer) {\n                clearInterval(this.fontLineTimer);\n            }\n            \n        } else {\n            store.isPlayAll = true\n            store.isFontSizeAuto = true;\n            store.isFontWeightAuto = true;\n            store.isFontLineSpacingAuto = true;\n            store.isFontLetterSpacingAuto = true;\n            if (store.isFontSizeAuto == false) {\n                clearInterval(this.fontSizeTimer);\n            } else {\n                clearInterval(this.fontSizeTimer);\n                this.__registerAutoFontSize();\n            }\n            if (store.isFontWeightAuto == false) {\n                clearInterval(this.fontWeightTimer);\n            } else {\n                clearInterval(this.fontWeightTimer);\n                this.__registerAutoFontWeight();\n            }\n            if (store.isFontLetterSpacingAuto == false) {\n                clearInterval(this.fontLetterTimer);\n            } else {\n                clearInterval(this.fontLetterTimer);\n                setInterval(this.fontLetterTimer);\n                this.__registerAutoFontLetter();\n            }\n            if (store.isFontLineSpacingAuto == false) {\n                clearInterval(this.fontLineTimer);\n            } else {\n                clearInterval(this.fontLineTimer);\n                this.__registerAutoFontLine();\n            }\n\n        }\n    }\n    __toggleResetAll  = () => {\n\n\n        store.isPlayAll = false;\n        store.fontSizeState = store.defaultFontSizeState;\n        store.fontWeightState = store.defaultFontWeightState;\n        store.fontLetterSpacingState = store.defaultFontLetterSpacingState;\n        store.fontLineSpacingState = store.defaultFontLineSpacingState;\n        store.fontColorState = store.defaultFontColorState;\n        store.fontState = store.defaultFontState;\n\n        store.isPlayAll = false\n        store.isFontSizeAuto = false;\n        store.isFontWeightAuto = false;\n        store.isFontLineSpacingAuto = false;\n        store.isFontLetterSpacingAuto = false;\n\n\n        store.directionFontSize = 'positive'; // negative;\n        store.secondFontSize = 100;\n        store.directionFontWeight = 'positive'; // negative;\n        store.secondFontWeight = 100;\n        store.directionFontLetterSpacing = 'positive'; // negative;\n        store.secondFontLetterSpacing  = 100;\n        store.directionFontLineSpacing = 'positive'; // negative;\n        store.secondFontLineSpacing  = 100;\n        \n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n    }\n\n\n    __toggleSecond = (param) => {\n        console.log('__toggleSecond');\n        var unit = 0;\n        param == 'font/size' ? unit = store.secondFontSize : null;\n        param == 'font/weight' ? unit = store.secondFontWeight : null;\n        param == 'font/letter-spacing' ? unit = store.secondFontLetterSpacing : null;\n        param == 'font/line-spacing' ? unit = store.secondFontLineSpacing : null;\n        \n        if (unit == 100 ) {unit = 200 } \n        else if (unit == 200 ) {unit = 300 } \n        else if (unit == 300 ) {unit = 100 } \n        \n        param == 'font/size' ? store.secondFontSize = unit : null;\n        param == 'font/weight' ?  store.secondFontWeight = unit : null;\n        param == 'font/letter-spacing' ?  store.secondFontLetterSpacing = unit : null;\n        param == 'font/line-spacing' ?  store.secondFontLineSpacing = unit : null;\n\n        if (store.isFontSizeAuto == false) {\n            clearInterval(this.fontSizeTimer);\n        } else {\n            clearInterval(this.fontSizeTimer);\n            this.__registerAutoFontSize();\n        }\n        if (store.isFontWeightAuto == false) {\n            clearInterval(this.fontWeightTimer);\n        } else {\n            clearInterval(this.fontWeightTimer);\n            this.__registerAutoFontWeight();\n        }\n        if (store.isFontLetterSpacingAuto == false) {\n            clearInterval(this.fontLetterTimer);\n        } else {\n            clearInterval(this.fontLetterTimer);\n            setInterval(this.fontLetterTimer);\n            this.__registerAutoFontLetter();\n        }\n        if (store.isFontLineSpacingAuto == false) {\n            clearInterval(this.fontLineTimer);\n        } else {\n            clearInterval(this.fontLineTimer);\n            this.__registerAutoFontLine();\n        }\n    }\n\n    onPrint  = () => {\n        const html = document.querySelector('html');\n        const printContents = document.querySelector('.font_display_container').innerHTML;\n        const printDiv = document.createElement('DIV');\n        printDiv.className = 'print-div';\n         \n        html.appendChild(printDiv);\n        printDiv.innerHTML = printContents;\n        document.body.style.display = 'none';\n        window.print();\n        document.body.style.display = 'block';\n        printDiv.style.display = 'none';\n\n        console.log('TEST')\n    }\n\n    render() {\n        const { path } = this.props;\n        const stored_token = store.token\n\n        return (\n            <>\n            <style \n            jsx=\"true\"\n            global=\"true\"\n            suppressHydrationWarning>\n                {`\n                    @font-face {\n                        font-family: \"Earth_FinalGX\";\n                        src: url(${this.props.prefix}/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                        }\n\n\n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 100;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Thin.otf) format('opentype');}\n\n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 300;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Light.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 400;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 500;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Medium.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 700;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Bold.otf) format('opentype');}\n                    \n                    @font-face {font-family: 'Noto Sans KR';font-style: normal;font-weight: 900;src: url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.woff2) format('woff2'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.woff) format('woff'),url(//fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Black.otf) format('opentype');}\n                    \n                    \n                          `}\n                          </style>\n            <style \n                jsx=\"true\"\n                global=\"true\" \n                suppressHydrationWarning>{`\n                textarea {\n                    width: 100%;\n                    resize: none;\n                    overflow-y: hidden; /* prevents scroll bar flash */\n                    padding: 1.1em; /* prevents text jump on Enter keypress */\n                    padding-bottom: 0.2em;\n                    line-height: 1.6;\n                  }\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n                .mobile_drawer_menu_left {\n                    width: calc(100% - 300px);\n                    height: 100%;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 300px;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                    overflow-y: scroll;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n                    width: calc(100% - 40px);\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    margin: 8px 0;\n                    position: relative;\n                    background: #e6e6e6;\n                    -ms-touch-action: none;\n                    touch-action: none;\n                    }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal .rangeslider__handle {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 10px;\n                    top: 50%;\n                    transform: translate3d(-50%,-50%,0);\n                    }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n                    .rangeslider-horizontal .rangeslider__handle:after {\n                        content: '',\n                        position: absolute;\n                        width: 0px;\n                        height: 0px;\n                        top: 6px;\n                        left: 6px;\n                        border-radius: 50%;\n                        background-color: #dadada;\n                        box-shadow: 0 1px 3px rgba(0,0,0,.4) inset,0 -1px 3px rgba(0,0,0,.4) inset;\n                        }\n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `}</style>\n            <div id=\"header\">\n                <div className=\"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall\">\n                    <div className=\"header-left\">\n                    </div>\n                    <div \n                    style={{\n                        position: 'absolute',\n                        width: 'auto',\n                        display: 'flex',\n                        alignSelf: 'center',\n                        left: '50%',\n                        transform: 'translate(-50%, 0%)',\n                    }}>\n                        <a href=\"/\" style={{ \n                                fontFamily: \"Earth_FinalGX\",}} >\n                            EARTH\n                        </a>\n                    </div>\n                    <div className=\"header-right\">\n                        <div id=\"wrapper\">\n                            <div className=\"circle icon\">\n                                <span className=\"line top\"></span>\n                                <span className=\"line middle\"></span>\n                                <span className=\"line bottom\"></span>\n                            </div>\n                        </div>\n                        {/* Drawer 메뉴 */}\n                        <div id=\"mobile_drawer_menu\" \n                        className=\"mobile_drawer_menu\" >\n                            <div id=\"mobile_drawer_menu_left\" style={{ width: 'calc(100% - 300px)', height: '100%'}}></div>\n                            <div  className=\"mobile_drawer_menu_inner\">\n\n                            <div id=\"menu-item-1\" \n                            className=\"menu-item cursor_pointer not_draggable\" \n                            style={{ \n                                fontFamily: \"Earth_FinalGX\",\n                                color : path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n                                fontWeight: path === '/' ? '600' : '500',\n                                textDecoration: path === '/' ? 'underline' : 'none',\n                                marginTop : 80,\n                                marginLeft : 40,\n                                }}\n                                onClick={()=> {\n                                    this._goPage('/');\n                                }}\n                            >\n                                <div style={{ fontSize: 15 }}>\n                                    PARK JUNG HYO's 1st Planet<br/>2020 Typeface Earth\n                                </div>\n                                    \n                            </div>\n                            \n                    <div >\n\n                        <div  \n                            style={{  \n                                fontSize : 20, \n                                display: 'flex', \n                                alignItems: 'flex-start', \n                                justifyContent: 'center', \n                                maxWidth: 400,\n                                marginLeft: 40,\n                                marginTop: 50, \n                            }}>\n                                <div >\n\n                                <div style={{ width: '100%', display : 'flex', marginBottom: 20, }}>\n\n                                    <div\n                                        style={{  fontFamily: 'Earth_FinalGX' , \n                                        width: 80,\n                                        height: 20, \n                                            fontSize: 10, \n                                            fontWeight: 700,\n                                            backgroundColor: store.isPlayAll == true ? '#000' : '#E4E4E4',\n                                            color : store.isPlayAll == true ? '#fff' : '#000',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius : 8,\n                                            \n                                        }}\n                                        onClick={()=> {\n                                            this.__togglePlayAll()\n                                        }}\n                                        >\n                                        {store.isPlayAll == true ? 'Pause all' : 'Play all'}\n                                    </div>\n                                    <div\n                                        style={{  fontFamily: 'Earth_FinalGX' , \n                                        width: 80,\n                                        height: 20, \n                                            fontSize: 10, \n                                            fontWeight: 700,\n                                            backgroundColor: '#E4E4E4',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            marginLeft: 8,\n                                            borderRadius : 8,\n                                        }}\n                                        onClick={()=> {\n                                            this.__toggleResetAll()\n                                        }}\n                                        >\n                                        Reset\n                                    </div>\n                                    \n                                </div>\n\n                                <div \n                                    style={{  fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                    }}>\n                                        Font Size\n                                        <Slider\n                                        min={0}\n                                        max={100}\n                                        value={store.fontSizeState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontSizeChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontSizeState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontSizeAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontSizeAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontSizeAuto();\n                                            }}\n                                            >\n                                                {store.isFontSizeAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            {/* store.secondFontSize */}\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                                onClick={()=> {\n                                                    this.__toggleSecond('font/size')\n                                                }}\n                                            >\n                                            {store.secondFontSize == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontSize == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontSize == 300 ? \"x3\"  : \"\"}\n                                                \n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                    </div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        marginTop: 20}}>\n                                        Font Weight\n                                        \n                                        <Slider\n                                        min={100}\n                                        max={500}\n                                        value={store.fontWeightState}\n                                        style={{ color: '#000'}}\n                                        onChangeStart={this.handleChangeStart}\n                                        onChange={this.handleFontWeightChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontWeightState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontWeightAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontWeightAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontWeightAuto();\n                                            }}\n                                            >\n                                            {store.isFontWeightAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n\n                                                this.__toggleSecond('font/weight')\n                                            }}\n                                            >\n                                            {store.secondFontWeight == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontWeight == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontWeight == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        marginTop: 20,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        }}>\n                                        Letter Spacing\n                                        \n                                        <Slider\n                                        min={-0.1}\n                                        max={0.2}\n                                        value={store.fontLetterSpacingState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLetterSpacingChange}\n                                        step={0.01}\n                                        />\n                                        <div className='auto_row'>\n\n                                            <div className=\"font_value\">\n                                            {store.fontLetterSpacingState.toFixed(2)}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontLetterSpacingAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontLetterSpacingAuto();\n                                            }}\n                                            >\n                                            {store.isFontLetterSpacingAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n                                                this.__toggleSecond('font/letter-spacing')\n                                            }}\n                                            >\n                                            {store.secondFontLetterSpacing == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontLetterSpacing == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontLetterSpacing == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        marginTop: 20,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        }}>\n                                        Line Spacing\n                                        <Slider\n                                        min={0.85}\n                                        max={1.5}\n                                        value={store.fontLineSpacingState}\n                                        step={0.01} \n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLineSpacingChange}\n                                        />\n                                        <div className='auto_row'>\n                                        <div className=\"font_value\">{store.fontLineSpacingState.toFixed(2)}</div>\n                                            \n                                        <div \n                                        style={{ \n                                            backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#E4E4E4',\n                                            color : store.isFontLineSpacingAuto ? '#fff' : '#000',\n                                            width: 80,\n                                            height: 20, \n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius : 8,\n                                            fontSize: 10,\n                                        }}\n                                        \n                                        onClick={()=> {\n                                            this._toggleFontLineSpacingAuto();\n                                        }}\n                                        >\n                                            {store.isFontLineSpacingAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            \n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n                                                this.__toggleSecond('font/line-spacing')\n                                            }}\n                                            >\n                                            {store.secondFontLineSpacing == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontLineSpacing == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontLineSpacing == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                            </div>\n                                    </div>\n\n\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX',\n                                        fontSize: 10,  \n                                        marginBottom: 10, \n                                        fontWeight: 700,\n                                    }}>Color\n                                        <br/>\n                                    </div>\n                                        <ChromePicker\n                                            color={ store.fontColorState }\n                                            onChangeComplete={ this.handleChangeComplete }\n                                            \n                                        />\n                                    <div \n                                            style={{ \n                                                fontFamily: 'Earth_FinalGX' , \n                                                backgroundColor:  '#E4E4E4',\n                                                color : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                                marginTop: 45,\n                                                fontWeight: 600, \n                                            }}\n                                            onClick={()=> {\n                                                const icon = document.getElementsByClassName(\"icon\");\n                                                const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n                                                icon[0].classList.toggle('close');\n                                                mobile_drawer_menu.classList.toggle('open');\n                                                this.onPrint()\n                                            }}\n                                            >\n                                                Print\n                                            </div>\n                                            <div style={{ height: 100 , }}></div>\n                                    </div>\n\n                                \n                            <div className=\"font_display_controller\"></div>\n                        </div>\n                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            </>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}