{"ast":null,"code":"var _class, _temp;\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Slider from 'react-rangeslider';\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\nimport { ChromePicker } from 'react-color';\nimport moment from 'moment';\nimport store from \"../common/store\";\nimport Backdrop from './Backdrop';\n\nlet Header = observer(_class = (_temp = class Header extends App {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeComplete = color => {\n      this.setState({\n        fontColorState: color.hex\n      });\n    };\n\n    this.handleFontSizeChange = event => {\n      //   console.log(event.target.value);\n      this.setState({\n        fontSizeState: event\n      });\n    };\n\n    this.handleFontWeightChange = value => {\n      this.setState({\n        fontWeightState: value\n      });\n    };\n\n    this.handleFontLetterSpacingChange = event => {\n      //   console.log(event.target.value);\n      this.setState({\n        fontLetterSpacingState: event\n      });\n    };\n\n    this.handleFontLineSpacingChange = event => {\n      //   console.log(event.target.value);\n      this.setState({\n        fontLineSpacingState: event\n      });\n    };\n\n    this._toggleFontSizeAuto = event => {\n      if (event == null || event === undefined) {\n        this.setState({\n          isFontSizeAuto: !this.state.isFontSizeAuto\n        });\n      } else {\n        if (event == true) {\n          this.setState({\n            isFontSizeAuto: true\n          });\n        } else {\n          this.setState({\n            isFontSizeAuto: false\n          });\n        }\n      }\n    };\n\n    this._toggleFontWeightAuto = event => {\n      if (event == null || event === undefined) {\n        this.setState({\n          isFontWeightAuto: !this.state.isFontWeightAuto\n        });\n      } else {\n        if (event == true) {\n          this.setState({\n            isFontWeightAuto: true\n          });\n        } else {\n          this.setState({\n            isFontWeightAuto: false\n          });\n        }\n      }\n    };\n\n    this._toggleFontLetterSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        this.setState({\n          isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto\n        });\n      } else {\n        if (event == true) {\n          this.setState({\n            isFontLetterSpacingAuto: true\n          });\n        } else {\n          this.setState({\n            isFontLetterSpacingAuto: false\n          });\n        }\n      }\n    };\n\n    this._toggleFontLineSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        this.setState({\n          isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto\n        });\n      } else {\n        if (event == true) {\n          this.setState({\n            isFontLineSpacingAuto: true\n          });\n        } else {\n          this.setState({\n            isFontLineSpacingAuto: false\n          });\n        }\n      }\n    };\n\n    this._bannerGoItem = index => {\n      this.setState({\n        index_banner_content: index\n      });\n      this.startCount();\n    };\n\n    this.toogleSwitchState = param_onoff => {\n      clearInterval(this.timer);\n\n      if (param_onoff == true) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n        return;\n      }\n\n      if (param_onoff == false) {\n        this.setState({\n          is_banner_animation: false\n        });\n        return;\n      }\n\n      if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n      } else {\n        this.setState({\n          is_banner_animation: false\n        }); //geolocation.stopObserving();\n      }\n    };\n\n    this._goPage = (paramRouterName, paramQuery) => {\n      // import Router from 'next/router';\n      // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n      Router.push({\n        pathname: paramRouterName // query: { tab : paramQuery }\n\n      });\n    };\n\n    this.state = {\n      layoutMode: 'desktop',\n      input_content: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n      footerGap: 200,\n      fontSizeState: 50,\n      fontWeightState: 300,\n      fontLetterSpacingState: 0,\n      fontLineSpacingState: 0.85,\n      fontColorState: '#000',\n      fontState: null,\n      isFontSizeAuto: false,\n      isFontWeightAuto: false,\n      isFontLetterSpacingAuto: false,\n      isFontLineSpacingAuto: false\n    };\n    this.onResize = this.onResize.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    const {\n      query\n    } = props; // const { token, refreshToken } = query;\n  }\n\n  componentDidMount() {\n    var stored_token = '';\n    window.addEventListener('resize', this.onResize);\n    const wrapper = document.getElementById(\"wrapper\");\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n    const icon = document.getElementsByClassName(\"icon\");\n    wrapper.addEventListener('click', () => {\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n    mobile_drawer_menu_left.addEventListener('click', () => {\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n  }\n\n  startCount() {\n    // this.setState({\n    //   isOn: true,\n    //   count: 0\n    // });\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      this._bannerChange();\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize() {\n    this.setState({\n      layoutMode: this.getLayoutMode()\n    });\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const icon = document.getElementsByClassName(\"icon\");\n  }\n\n  getLayoutMode() {\n    return window.innerWidth > 1200 ? 'desktop' : 'non-desktop';\n  }\n\n  render() {\n    const {\n      path\n    } = this.props;\n    const stored_token = store.token;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 80%;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n\n                    width: calc(100% - 40px);\n\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n            .rangeslider .rangeslider__handle {\n                background: #fff;\n                border: 1px solid #ccc;\n                cursor: pointer;\n                display: inline-block;\n                position: absolute;\n                box-shadow: 0 1px 1px rgba(0,0,0,.4),0 -1px 1px rgba(0,0,0,.4);\n                }\n                \n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall  max-width-wrapper\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'auto',\n        display: 'flex',\n        alignSelf: 'center',\n        left: '50%',\n        transform: 'translate(-50%, 0%)'\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      style: {\n        fontFamily: \"Earth_FinalGX\"\n      }\n    }, \"PARK JUNG HYO.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle icon\"\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line top\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line middle\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line bottom\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu\",\n      className: \"mobile_drawer_menu\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu_left\",\n      style: {\n        width: '20%',\n        height: '100%'\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_drawer_menu_inner\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"menu-item-1\",\n      className: \"menu-item cursor_pointer not_draggable\",\n      style: {\n        fontFamily: \"Earth_FinalGX\",\n        color: path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n        fontWeight: path === '/' ? '600' : '500',\n        textDecoration: path === '/' ? 'underline' : 'none',\n        marginTop: 80,\n        marginLeft: 24\n      },\n      onClick: () => {\n        this._goPage('/');\n      }\n    }, \"PARK JUNG HYO's 1st Planet : Earth\"), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 20,\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        maxWidth: 400\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 'calc(100% - 40px)',\n        maxWidth: 300,\n        fontSize: 10\n      }\n    }, \"Font Size\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 100,\n      value: store.fontSizeState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontSizeChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontSizeState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontSizeAuto ? '#000' : '#fff',\n        color: store.isFontSizeAuto ? '#fff' : '#000',\n        marginLeft: 20\n      },\n      onClick: () => {\n        this._toggleFontSizeAuto();\n      }\n    }, \"Automation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 'calc(100% - 40px)',\n        maxWidth: 300,\n        fontSize: 10,\n        marginTop: 20\n      }\n    }, \"Font Weight\", /*#__PURE__*/React.createElement(Slider, {\n      min: 100,\n      max: 900,\n      value: store.fontWeightState,\n      style: {\n        color: '#000'\n      },\n      onChangeStart: this.handleChangeStart,\n      onChange: this.handleFontWeightChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontWeightState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontWeightAuto ? '#000' : '#fff',\n        color: store.isFontWeightAuto ? '#fff' : '#000',\n        marginLeft: 20\n      },\n      onClick: () => {\n        this._toggleFontWeightAuto();\n      }\n    }, \"Automation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 'calc(100% - 40px)',\n        maxWidth: 300,\n        marginTop: 20,\n        fontSize: 10\n      }\n    }, \"Letter Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: -0.1,\n      max: 0.2,\n      value: store.fontLetterSpacingState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLetterSpacingChange,\n      step: 0.01\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLetterSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#fff',\n        color: store.isFontLetterSpacingAuto ? '#fff' : '#000',\n        marginLeft: 20\n      },\n      onClick: () => {\n        this._toggleFontLetterSpacingAuto();\n      }\n    }, \"Automation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 'calc(100% - 40px)',\n        maxWidth: 300,\n        marginTop: 20,\n        fontSize: 10\n      }\n    }, \"Line Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0.85,\n      max: 1.5,\n      value: store.fontLineSpacingState,\n      step: 0.01,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLineSpacingChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLineSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#fff',\n        color: store.isFontLineSpacingAuto ? '#fff' : '#000',\n        marginLeft: 20\n      },\n      onClick: () => {\n        this._toggleFontLineSpacingAuto();\n      }\n    }, \"Automation\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX'\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(ChromePicker, {\n      color: store.fontColorState,\n      onChangeComplete: this.handleChangeComplete\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_display_controller\"\n    })))))))), /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n                        @font-face {\n                            font-family: \"Earth_FinalGX\";\n                            src: url(/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                          }\n                          `));\n  }\n\n}, _temp)) || _class;\n\nexport default Header;","map":{"version":3,"sources":["/Users/nough/Desktop/font_pjh_site/components/Header.js"],"names":["React","Component","Router","App","observable","observer","Slider","VerticalSlider","HorizontalSlider","ChromePicker","moment","store","Backdrop","Header","constructor","props","handleChangeComplete","color","setState","fontColorState","hex","handleFontSizeChange","event","fontSizeState","handleFontWeightChange","value","fontWeightState","handleFontLetterSpacingChange","fontLetterSpacingState","handleFontLineSpacingChange","fontLineSpacingState","_toggleFontSizeAuto","undefined","isFontSizeAuto","state","_toggleFontWeightAuto","isFontWeightAuto","_toggleFontLetterSpacingAuto","isFontLetterSpacingAuto","_toggleFontLineSpacingAuto","isFontLineSpacingAuto","_bannerGoItem","index","index_banner_content","startCount","toogleSwitchState","param_onoff","clearInterval","timer","is_banner_animation","_goPage","paramRouterName","paramQuery","push","pathname","layoutMode","input_content","footerGap","fontState","onResize","bind","getInitialProps","query","componentDidMount","stored_token","window","addEventListener","wrapper","document","getElementById","mobile_drawer_menu","mobile_drawer_menu_left","icon","getElementsByClassName","classList","toggle","setInterval","_bannerChange","componentWillUnmount","removeEventListener","getLayoutMode","innerWidth","render","path","token","position","width","display","alignSelf","left","transform","fontFamily","height","fontWeight","textDecoration","marginTop","marginLeft","fontSize","alignItems","justifyContent","maxWidth","backgroundColor","handleChangeStart","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app'\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Slider from 'react-rangeslider'\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\n\nimport { ChromePicker } from 'react-color'; \nimport moment from 'moment';\nimport store from \"../common/store\";\n\nimport Backdrop from './Backdrop';\n\n\n@observer\nclass Header extends App {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            layoutMode: 'desktop',\n            input_content : 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n\n            footerGap : 200, \n\n            fontSizeState : 50,\n            fontWeightState: 300,\n            fontLetterSpacingState : 0,\n            fontLineSpacingState: 0.85,\n            fontColorState : '#000',\n            fontState : null,\n\n            isFontSizeAuto : false,\n            isFontWeightAuto : false,\n            isFontLetterSpacingAuto : false,\n            isFontLineSpacingAuto : false,\n        };\n\n        this.onResize = this.onResize.bind(this);\n    }\n    static async getInitialProps(props) {\n        const { query } = props;\n        // const { token, refreshToken } = query;\n        \n    }\n\n    componentDidMount() {\n\n        var stored_token = ''\n\n        window.addEventListener('resize', this.onResize);\n        const wrapper = document.getElementById(\"wrapper\");\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n        const icon = document.getElementsByClassName(\"icon\");\n        wrapper.addEventListener('click',  () => {\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n        mobile_drawer_menu_left.addEventListener('click',  () => {\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n    }\n\n\n    handleChangeComplete = (color) => {\n        this.setState({ fontColorState: color.hex });\n      };\n    \n\n      handleFontSizeChange = event => {\n        //   console.log(event.target.value);\n        this.setState({\n            fontSizeState: event\n        })\n      };\n      handleFontWeightChange = value => {\n        this.setState({\n            fontWeightState: value\n        })\n      };\n\n\n      handleFontLetterSpacingChange = event => {\n        //   console.log(event.target.value);\n        this.setState({\n            fontLetterSpacingState: event\n        })\n      };\n\n\n      handleFontLineSpacingChange = event => {\n        //   console.log(event.target.value);\n        this.setState({\n            fontLineSpacingState: event\n        })\n      };\n\n      _toggleFontSizeAuto  = event => {\n\n        if (event == null || event === undefined) {\n\n            this.setState({\n                isFontSizeAuto: !this.state.isFontSizeAuto\n            }) \n        } else {\n            if (event == true) {\n\n                this.setState({\n                    isFontSizeAuto: true\n                }) \n            } else {\n\n                this.setState({\n                    isFontSizeAuto: false\n                }) \n            }\n        } \n      }\n\n\n      _toggleFontWeightAuto  = event => {\n\n        if (event == null || event === undefined) {\n\n            this.setState({\n                isFontWeightAuto: !this.state.isFontWeightAuto\n            }) \n        } else {\n            if (event == true) {\n\n                this.setState({\n                    isFontWeightAuto: true\n                }) \n            } else {\n\n                this.setState({\n                    isFontWeightAuto: false\n                }) \n            }\n        } \n      }\n\n      _toggleFontLetterSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n\n            this.setState({\n                isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto\n            }) \n        } else {\n            if (event == true) {\n\n                this.setState({\n                    isFontLetterSpacingAuto: true\n                }) \n            } else {\n\n                this.setState({\n                    isFontLetterSpacingAuto: false\n                }) \n            }\n        } \n      }\n\n      _toggleFontLineSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n\n            this.setState({\n                isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto\n            }) \n        } else {\n            if (event == true) {\n\n                this.setState({\n                    isFontLineSpacingAuto: true\n                }) \n            } else {\n\n                this.setState({\n                    isFontLineSpacingAuto: false\n                }) \n            }\n        } \n      }\n\n\n\n    _bannerGoItem = (index) => {\n        this.setState({\n            index_banner_content: index\n        });\n        this.startCount();\n    }\n\n      startCount() {\n        // this.setState({\n        //   isOn: true,\n        //   count: 0\n        // });\n        clearInterval(this.timer);\n        this.timer = setInterval( () => { \n            this._bannerChange();\n        }, 5000);\n      }\n      \n  toogleSwitchState = (param_onoff) => {\n    clearInterval(this.timer);\n\n    if (param_onoff == true) {\n\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n        return;\n    } \n\n    \n    if (param_onoff == false) {\n\n        this.setState({ is_banner_animation: false })\n        return;\n    } \n\n    \n\n    if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n    } else {\n        this.setState({ is_banner_animation: false })\n        //geolocation.stopObserving();\n    }\n  }\n\n\n\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize() {\n        this.setState({\n            layoutMode: this.getLayoutMode(),\n        });\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const icon = document.getElementsByClassName(\"icon\");\n    }\n\n    getLayoutMode() {\n        return window.innerWidth > 1200 ?\n            'desktop'\n            : 'non-desktop';\n    }\n\n\n    _goPage = (paramRouterName, paramQuery) => {\n        // import Router from 'next/router';\n        // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n        Router.push({\n        pathname: paramRouterName,\n        // query: { tab : paramQuery }\n        });\n    };\n\n    render() {\n        \n        const { path } = this.props;\n        const stored_token = store.token\n\n        return (\n            <>\n            <style \n                jsx=\"true\"\n                global=\"true\" \n                suppressHydrationWarning>{`\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 80%;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n\n                    width: calc(100% - 40px);\n\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n            .rangeslider .rangeslider__handle {\n                background: #fff;\n                border: 1px solid #ccc;\n                cursor: pointer;\n                display: inline-block;\n                position: absolute;\n                box-shadow: 0 1px 1px rgba(0,0,0,.4),0 -1px 1px rgba(0,0,0,.4);\n                }\n                \n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `}</style>\n            <div id=\"header\">\n                <div className=\"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall  max-width-wrapper\">\n                    <div className=\"header-left\">\n                        \n                    </div>\n                    <div \n                    style={{\n                        position: 'absolute',\n                        width: 'auto',\n                        display: 'flex',\n                        alignSelf: 'center',\n                        left: '50%',\n                        transform: 'translate(-50%, 0%)',\n                    }}>\n                        <a href=\"/\" style={{ \n                                fontFamily: \"Earth_FinalGX\",}} >\n                            PARK JUNG HYO.\n                        </a>\n                    </div>\n                    <div className=\"header-right\">\n                        <div id=\"wrapper\">\n                            <div className=\"circle icon\">\n                                <span className=\"line top\"></span>\n                                <span className=\"line middle\"></span>\n                                <span className=\"line bottom\"></span>\n                            </div>\n                        </div>\n                        {/* Drawer 메뉴 */}\n                        <div id=\"mobile_drawer_menu\" className=\"mobile_drawer_menu\" >\n                            <div id=\"mobile_drawer_menu_left\" style={{ width: '20%',  height: '100%'}}></div>\n                            <div  className=\"mobile_drawer_menu_inner\">\n\n                            <div id=\"menu-item-1\" \n                            className=\"menu-item cursor_pointer not_draggable\" \n                            style={{ \n                                fontFamily: \"Earth_FinalGX\",\n                                color : path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n                                fontWeight: path === '/' ? '600' : '500',\n                                textDecoration: path === '/' ? 'underline' : 'none',\n                                marginTop : 80,\n                                marginLeft : 24,\n                                }}\n                                onClick={()=> {\n                                    this._goPage('/');\n                                }}\n                            >\n                                    PARK JUNG HYO's 1st Planet : Earth\n                            </div>\n                            \n                    <div >\n\n                        <div  \n                            style={{  fontSize : 20, display: 'flex', alignItems: 'flex-start', justifyContent: 'center' \n                            , maxWidth: 400,\n                            }}>\n                                <div >\n                                <div \n                                    style={{  fontFamily: 'Earth_FinalGX' , \n                                        width: 'calc(100% - 40px)' ,\n                                        maxWidth: 300,\n                                        fontSize: 10, \n                                    }}>\n                                        Font Size\n                                        <Slider\n                                        min={0}\n                                        max={100}\n                                        value={store.fontSizeState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontSizeChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontSizeState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontSizeAuto ? '#000' : '#fff',\n                                                color : store.isFontSizeAuto ? '#fff' : '#000',\n                                                marginLeft: 20\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontSizeAuto();\n                                            }}\n                                            >Automation</div></div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        width: 'calc(100% - 40px)', \n                                        maxWidth: 300,\n                                        fontSize: 10, \n                                        marginTop: 20}}>\n                                        Font Weight\n                                        \n                                        <Slider\n                                        min={100}\n                                        max={900}\n                                        value={store.fontWeightState}\n                                        style={{ color: '#000'}}\n                                        onChangeStart={this.handleChangeStart}\n                                        onChange={this.handleFontWeightChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontWeightState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontWeightAuto ? '#000' : '#fff',\n                                                color : store.isFontWeightAuto ? '#fff' : '#000',\n                                                marginLeft: 20\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontWeightAuto();\n                                            }}\n                                            >Automation</div>\n                                        </div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        width: 'calc(100% - 40px)',\n                                        maxWidth: 300, \n                                        marginTop: 20,\n                                        fontSize: 10, \n                                        }}>\n                                        Letter Spacing\n                                        \n                                        <Slider\n                                        min={-0.1}\n                                        max={0.2}\n                                        value={store.fontLetterSpacingState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLetterSpacingChange}\n                                        step={0.01}\n                                        />\n                                        <div className='auto_row'>\n\n                                            <div className=\"font_value\">\n                                            {store.fontLetterSpacingState.toFixed(2)}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#fff',\n                                                color : store.isFontLetterSpacingAuto ? '#fff' : '#000',\n                                                marginLeft: 20\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontLetterSpacingAuto();\n                                            }}\n                                            >Automation</div></div>\n                                    </div>\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        width: 'calc(100% - 40px)',\n                                        maxWidth: 300, \n                                        marginTop: 20,\n\n                                        fontSize: 10, \n                                        }}>\n                                        Line Spacing\n                                        <Slider\n                                        min={0.85}\n                                        max={1.5}\n                                        value={store.fontLineSpacingState}\n                                        step={0.01} \n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLineSpacingChange}\n                                        />\n                                        <div className='auto_row'>\n                                            \n                                        <div className=\"font_value\">{store.fontLineSpacingState.toFixed(2)}</div>\n                                            \n                                        <div \n                                        style={{ \n                                            backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#fff',\n                                            color : store.isFontLineSpacingAuto ? '#fff' : '#000',\n                                            marginLeft: 20\n                                        }}\n                                        \n                                        onClick={()=> {\n                                            this._toggleFontLineSpacingAuto();\n                                        }}\n                                        >Automation</div></div>\n                                    </div>\n\n\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' }}>Color\n                                        <br/>\n                                    </div>\n                                        <ChromePicker\n                                            color={ store.fontColorState }\n                                            onChangeComplete={ this.handleChangeComplete }\n                                            \n                                        />\n                                </div>\n                                \n                            <div className=\"font_display_controller\"></div>\n                        </div>\n                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <style \n            jsx=\"true\"\n            global=\"true\"\n            suppressHydrationWarning>\n                {`\n                        @font-face {\n                            font-family: \"Earth_FinalGX\";\n                            src: url(/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                          }\n                          `}\n                          </style>\n            </>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}