{"ast":null,"code":"var _class, _temp;\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\nimport Slider from 'react-rangeslider';\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\nimport SVG from '../components/SVG';\nimport { ChromePicker } from 'react-color';\nimport moment from 'moment';\nimport store from \"../common/store\";\nimport Backdrop from './Backdrop';\n\nlet Header = observer(_class = (_temp = class Header extends App {\n  constructor(props) {\n    super(props);\n    this.fontWeightTimer = setInterval(() => {\n      if (store.directionFontWeight == 'positive') {\n        store.fontWeightState = store.fontWeightState + store.unitFontWeight;\n      } else {\n        store.fontWeightState = store.fontWeightState - store.unitFontWeight;\n      }\n\n      if (store.fontWeightState == store.maxFontWeight) {\n        store.directionFontWeight = 'negative';\n      }\n\n      if (store.fontSizeState == store.minFontSize) {\n        store.directionFontWeight = 'positive';\n      }\n    }, store.secondFontWeight);\n    this.fontSizeTimer = setInterval(() => {\n      if (store.directionFontSize == 'positive') {\n        store.fontSizeState = store.fontSizeState + store.unitFontSize;\n      } else {\n        store.fontSizeState = store.fontSizeState - store.unitFontSize;\n      }\n\n      if (store.fontSizeState == store.maxFontSize) {\n        store.directionFontSize = 'negative';\n      }\n\n      if (store.fontSizeState == store.minFontSize) {\n        store.directionFontSize = 'positive';\n      }\n    }, store.secondFontSize);\n    this.fontLetterTimer = setInterval(() => {\n      if (store.directionFontLetterSpacing == 'positive') {\n        store.fontLetterSpacingState = store.fontLetterSpacingState + store.unitFontLetterSpacing;\n      } else {\n        store.fontLetterSpacingState = store.fontLetterSpacingState - store.unitFontLetterSpacing;\n      }\n\n      if (store.fontLetterSpacingState >= store.maxFontLetterSpacing) {\n        store.directionFontLetterSpacing = 'negative';\n      }\n\n      if (store.fontLetterSpacingState <= store.minFontLetterSpacing) {\n        store.directionFontLetterSpacing = 'positive';\n      }\n    }, store.secondFontLetterSpacing);\n    this.fontLineTimer = setInterval(() => {\n      if (store.directionFontLineSpacing == 'positive') {\n        store.fontLineSpacingState = store.fontLineSpacingState + store.unitFontLineSpacing;\n      } else {\n        store.fontLineSpacingState = store.fontLineSpacingState - store.unitFontLineSpacing;\n      }\n\n      if (store.fontLineSpacingState >= store.maxFontLineSpacing) {\n        store.directionFontLineSpacing = 'negative';\n      }\n\n      if (store.fontLineSpacingState <= store.minFontLineSpacing) {\n        store.directionFontLineSpacing = 'positive';\n      }\n    }, store.secondFontLineSpacing);\n\n    this.handleChangeComplete = color => {\n      // this.setState({ fontColorState: color.hex });\n      store.fontColorState = color.hex;\n    };\n\n    this.handleFontSizeChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({ fontSizeState: event  })\n      store.fontSizeState = event;\n    };\n\n    this.handleFontWeightChange = event => {\n      // this.setState({  fontWeightState: value  })\n      store.fontWeightState = event;\n    };\n\n    this.handleFontLetterSpacingChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({  fontLetterSpacingState: event  })\n      store.fontLetterSpacingState = event;\n    };\n\n    this.handleFontLineSpacingChange = event => {\n      //   console.log(event.target.value);\n      // this.setState({ fontLineSpacingState: event  })\n      store.fontLineSpacingState = event;\n    };\n\n    this._toggleFontSizeAuto = event => {\n      // minFontSize\n      // maxFontSize\n      // unitFontSize\n      // directionFontSize\n      if (event == null || event === undefined) {\n        // this.setState({ isFontSizeAuto: !this.state.isFontSizeAuto }) \n        if (store.isFontSizeAuto == true) {\n          clearInterval(this.fontSizeTimer);\n        } else {\n          clearInterval(this.fontSizeTimer);\n          setInterval(this.fontSizeTimer);\n        }\n\n        store.isFontSizeAuto = !store.isFontSizeAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontSizeAuto: true }) \n          store.isFontSizeAuto = true;\n        } else {\n          // this.setState({ isFontSizeAuto: false  }) \n          store.isFontSizeAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontWeightAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({  isFontWeightAuto: !this.state.isFontWeightAuto }) \n        if (store.isFontWeightAuto == true) {\n          clearInterval(this.fontWeightTimer);\n        } else {\n          clearInterval(this.fontWeightTimer);\n          setInterval(this.fontWeightTimer);\n        }\n\n        store.isFontWeightAuto = !store.isFontWeightAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontWeightAuto: true }) \n          store.isFontWeightAuto = true;\n        } else {\n          // this.setState({   isFontWeightAuto: false }) \n          store.isFontWeightAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontLetterSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({ isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto }) \n        if (store.isFontLetterSpacingAuto == true) {\n          clearInterval(this.fontLetterTimer);\n        } else {\n          clearInterval(this.fontLetterTimer);\n          setInterval(this.fontLetterTimer);\n        }\n\n        store.isFontLetterSpacingAuto = !store.isFontLetterSpacingAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontLetterSpacingAuto: true }) \n          store.isFontLetterSpacingAuto = true;\n        } else {\n          // this.setState({  isFontLetterSpacingAuto: false }) \n          store.isFontLetterSpacingAuto = false;\n        }\n      }\n    };\n\n    this._toggleFontLineSpacingAuto = event => {\n      if (event == null || event === undefined) {\n        // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n        if (store.isFontLineSpacingAuto == true) {\n          clearInterval(this.fontLineTimer);\n        } else {\n          clearInterval(this.fontLineTimer);\n          setInterval(this.fontLineTimer);\n        }\n\n        store.isFontLineSpacingAuto = !store.isFontLineSpacingAuto;\n      } else {\n        if (event == true) {\n          // this.setState({ isFontLineSpacingAuto: true  }) \n          store.isFontLineSpacingAuto = true;\n        } else {\n          // this.setState({ isFontLineSpacingAuto: false  }) \n          store.isFontLineSpacingAuto = false;\n        }\n      }\n    };\n\n    this._bannerGoItem = index => {\n      this.setState({\n        index_banner_content: index\n      });\n      this.startCount();\n    };\n\n    this.toogleSwitchState = param_onoff => {\n      clearInterval(this.timer);\n\n      if (param_onoff == true) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n        return;\n      }\n\n      if (param_onoff == false) {\n        this.setState({\n          is_banner_animation: false\n        });\n        return;\n      }\n\n      if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({\n          is_banner_animation: true\n        });\n      } else {\n        this.setState({\n          is_banner_animation: false\n        }); //geolocation.stopObserving();\n      }\n    };\n\n    this._goPage = (paramRouterName, paramQuery) => {\n      // import Router from 'next/router';\n      // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n      Router.push({\n        pathname: paramRouterName // query: { tab : paramQuery }\n\n      });\n    };\n\n    this.__togglePlayAll = () => {\n      if (store.isPlayAll == true) {\n        store.isPlayAll = false;\n        store.isFontSizeAuto = false;\n        store.isFontWeightAuto = false;\n        store.isFontLineSpacingAuto = false;\n        store.isFontLetterSpacingAuto = false;\n\n        if (this.fontSizeTimer) {\n          clearInterval(this.fontSizeTimer);\n        }\n\n        if (this.fontWeightTimer) {\n          clearInterval(this.fontWeightTimer);\n        }\n\n        if (this.fontLetterTimer) {\n          clearInterval(this.fontLetterTimer);\n        }\n\n        if (this.fontLineTimer) {\n          clearInterval(this.fontLineTimer);\n        }\n      } else {\n        store.isPlayAll = true;\n      }\n    };\n\n    this.__toggleResetAll = () => {\n      store.isPlayAll = false;\n      store.fontSizeState = store.defaultFontSizeState;\n      store.fontWeightState = store.defaultFontWeightState;\n      store.fontLetterSpacingState = store.defaultFontLetterSpacingState;\n      store.fontLineSpacingState = store.defaultFontLineSpacingState;\n      store.fontColorState = store.defaultFontColorState;\n      store.fontState = store.defaultFontState;\n      store.isPlayAll = false;\n      store.isFontSizeAuto = false;\n      store.isFontWeightAuto = false;\n      store.isFontLineSpacingAuto = false;\n      store.isFontLetterSpacingAuto = false;\n      store.directionFontSize = 'positive'; // negative;\n\n      store.secondFontSize = 100;\n      store.directionFontWeight = 'positive'; // negative;\n\n      store.secondFontWeight = 100;\n      store.directionFontLetterSpacing = 'positive'; // negative;\n\n      store.secondFontLetterSpacing = 100;\n      store.directionFontLineSpacing = 'positive'; // negative;\n\n      store.secondFontLineSpacing = 100;\n\n      if (this.fontSizeTimer) {\n        clearInterval(this.fontSizeTimer);\n      }\n\n      if (this.fontWeightTimer) {\n        clearInterval(this.fontWeightTimer);\n      }\n\n      if (this.fontLetterTimer) {\n        clearInterval(this.fontLetterTimer);\n      }\n\n      if (this.fontLineTimer) {\n        clearInterval(this.fontLineTimer);\n      }\n    };\n\n    this.__toggleSecond = param => {\n      console.log('__toggleSecond');\n      var unit = 0;\n      param == 'font/size' ? unit = store.secondFontSize : null;\n      param == 'font/weight' ? unit = store.secondFontWeight : null;\n      param == 'font/letter-spacing' ? unit = store.secondFontLetterSpacing : null;\n      param == 'font/line-spacing' ? unit = store.secondFontLineSpacing : null;\n\n      if (unit == 100) {\n        unit = 200;\n      } else if (unit == 200) {\n        unit = 300;\n      } else if (unit == 300) {\n        unit = 100;\n      }\n\n      param == 'font/size' ? store.secondFontSize = unit : null;\n      param == 'font/weight' ? store.secondFontWeight = unit : null;\n      param == 'font/letter-spacing' ? store.secondFontLetterSpacing = unit : null;\n      param == 'font/line-spacing' ? store.secondFontLineSpacing = unit : null;\n    };\n\n    this.state = {\n      layoutMode: 'desktop',\n      input_content: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n      footerGap: 200,\n      fontSizeState: 50,\n      fontWeightState: 300,\n      fontLetterSpacingState: 0,\n      fontLineSpacingState: 0.85,\n      fontColorState: '#000',\n      fontState: null,\n      isFontSizeAuto: false,\n      isFontWeightAuto: false,\n      isFontLetterSpacingAuto: false,\n      isFontLineSpacingAuto: false\n    };\n    this.onResize = this.onResize.bind(this);\n  }\n\n  static async getInitialProps(props) {\n    const {\n      query\n    } = props; // const { token, refreshToken } = query;\n  }\n\n  componentDidMount() {\n    var stored_token = '';\n    window.addEventListener('resize', this.onResize);\n    const wrapper = document.getElementById(\"wrapper\");\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n    const icon = document.getElementsByClassName(\"icon\");\n    wrapper.addEventListener('click', () => {\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n    mobile_drawer_menu_left.addEventListener('click', () => {\n      icon[0].classList.toggle('close');\n      mobile_drawer_menu.classList.toggle('open');\n    });\n\n    if (this.fontSizeTimer) {\n      clearInterval(this.fontSizeTimer);\n    }\n\n    if (this.fontWeightTimer) {\n      clearInterval(this.fontWeightTimer);\n    }\n\n    if (this.fontLetterTimer) {\n      clearInterval(this.fontLetterTimer);\n    }\n\n    if (this.fontLineTimer) {\n      clearInterval(this.fontLineTimer);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.fontSizeTimer) {\n      clearInterval(this.fontSizeTimer);\n    }\n\n    if (this.fontWeightTimer) {\n      clearInterval(this.fontWeightTimer);\n    }\n\n    if (this.fontLetterTimer) {\n      clearInterval(this.fontLetterTimer);\n    }\n\n    if (this.fontLineTimer) {\n      clearInterval(this.fontLineTimer);\n    }\n  }\n\n  startCount() {\n    // this.setState({\n    //   isOn: true,\n    //   count: 0\n    // });\n    clearInterval(this.timer);\n    this.timer = setInterval(() => {\n      this._bannerChange();\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize() {\n    this.setState({\n      layoutMode: this.getLayoutMode()\n    });\n    const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n    const icon = document.getElementsByClassName(\"icon\");\n  }\n\n  getLayoutMode() {\n    return window.innerWidth > 1200 ? 'desktop' : 'non-desktop';\n  }\n\n  render() {\n    const {\n      path\n    } = this.props;\n    const stored_token = store.token;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n                .mobile_drawer_menu_left {\n                    width: calc(100% - 400px);\n                    height: 100%;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 400px;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n                    width: calc(100% - 40px);\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    margin: 8px 0;\n                    position: relative;\n                    background: #e6e6e6;\n                    -ms-touch-action: none;\n                    touch-action: none;\n                    }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal .rangeslider__handle {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 10px;\n                    top: 50%;\n                    transform: translate3d(-50%,-50%,0);\n                    }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n                    .rangeslider-horizontal .rangeslider__handle:after {\n                        content: '',\n                        position: absolute;\n                        width: 0px;\n                        height: 0px;\n                        top: 6px;\n                        left: 6px;\n                        border-radius: 50%;\n                        background-color: #dadada;\n                        box-shadow: 0 1px 3px rgba(0,0,0,.4) inset,0 -1px 3px rgba(0,0,0,.4) inset;\n                        }\n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall  max-width-wrapper\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-left\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'auto',\n        display: 'flex',\n        alignSelf: 'center',\n        left: '50%',\n        transform: 'translate(-50%, 0%)'\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      style: {\n        fontFamily: \"Earth_FinalGX\"\n      }\n    }, \"PARK JUNG HYO.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-right\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle icon\"\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line top\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line middle\"\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"line bottom\"\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu\",\n      className: \"mobile_drawer_menu\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mobile_drawer_menu_left\",\n      style: {\n        width: 'calc(100% - 400px)',\n        height: '100%'\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_drawer_menu_inner\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"menu-item-1\",\n      className: \"menu-item cursor_pointer not_draggable\",\n      style: {\n        fontFamily: \"Earth_FinalGX\",\n        color: path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n        fontWeight: path === '/' ? '600' : '500',\n        textDecoration: path === '/' ? 'underline' : 'none',\n        marginTop: 80,\n        marginLeft: 24\n      },\n      onClick: () => {\n        this._goPage('/');\n      }\n    }, \"PARK JUNG HYO's 1st Planet : Earth\"), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 20,\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        maxWidth: 400,\n        marginLeft: 40,\n        marginTop: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        marginBottom: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 80,\n        height: 20,\n        fontSize: 10,\n        fontWeight: 700,\n        backgroundColor: store.isPlayAll == true ? '#000' : '#E4E4E4',\n        color: store.isPlayAll == true ? '#fff' : '#000',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8\n      },\n      onClick: () => {\n        this.__togglePlayAll();\n      }\n    }, store.isPlayAll == true ? 'Pause all' : 'Play all'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        width: 80,\n        height: 20,\n        fontSize: 10,\n        fontWeight: 700,\n        backgroundColor: '#E4E4E4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginLeft: 8,\n        borderRadius: 8\n      },\n      onClick: () => {\n        this.__toggleResetAll();\n      }\n    }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Font Size\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0,\n      max: 100,\n      value: store.fontSizeState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontSizeChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontSizeState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontSizeAuto ? '#000' : '#E4E4E4',\n        color: store.isFontSizeAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontSizeAuto();\n      }\n    }, store.isFontSizeAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/size');\n      }\n    }, store.secondFontSize == 100 ? \"x1\" : \"\", store.secondFontSize == 200 ? \"x2\" : \"\", store.secondFontSize == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        fontSize: 10,\n        fontWeight: 700,\n        marginTop: 20\n      }\n    }, \"Font Weight\", /*#__PURE__*/React.createElement(Slider, {\n      min: 100,\n      max: 900,\n      value: store.fontWeightState,\n      style: {\n        color: '#000'\n      },\n      onChangeStart: this.handleChangeStart,\n      onChange: this.handleFontWeightChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontWeightState), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontWeightAuto ? '#000' : '#E4E4E4',\n        color: store.isFontWeightAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontWeightAuto();\n      }\n    }, store.isFontWeightAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/weight');\n      }\n    }, store.secondFontWeight == 100 ? \"x1\" : \"\", store.secondFontWeight == 200 ? \"x2\" : \"\", store.secondFontWeight == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        marginTop: 20,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Letter Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: -0.1,\n      max: 0.2,\n      value: store.fontLetterSpacingState,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLetterSpacingChange,\n      step: 0.01\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLetterSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#E4E4E4',\n        color: store.isFontLetterSpacingAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontLetterSpacingAuto();\n      }\n    }, store.isFontLetterSpacingAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/letter-spacing');\n      }\n    }, store.secondFontLetterSpacing == 100 ? \"x1\" : \"\", store.secondFontLetterSpacing == 200 ? \"x2\" : \"\", store.secondFontLetterSpacing == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        maxWidth: 225,\n        marginTop: 20,\n        fontSize: 10,\n        fontWeight: 700\n      }\n    }, \"Line Spacing\", /*#__PURE__*/React.createElement(Slider, {\n      min: 0.85,\n      max: 1.5,\n      value: store.fontLineSpacingState,\n      step: 0.01,\n      style: {\n        color: '#000'\n      },\n      onChange: this.handleFontLineSpacingChange\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auto_row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_value\"\n    }, store.fontLineSpacingState.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#E4E4E4',\n        color: store.isFontLineSpacingAuto ? '#fff' : '#000',\n        width: 80,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 8,\n        fontSize: 10\n      },\n      onClick: () => {\n        this._toggleFontLineSpacingAuto();\n      }\n    }, store.isFontLineSpacingAuto ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.__toggleSecond('font/line-spacing');\n      }\n    }, store.secondFontLineSpacing == 100 ? \"x1\" : \"\", store.secondFontLineSpacing == 200 ? \"x2\" : \"\", store.secondFontLineSpacing == 300 ? \"x3\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#E4E4E4',\n        color: '#000',\n        width: 20,\n        height: 20,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 10,\n        fontSize: 10,\n        marginLeft: 5\n      }\n    }, \"?\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Earth_FinalGX',\n        fontSize: 10,\n        marginBottom: 10,\n        fontWeight: 700\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"br\", null)), /*#__PURE__*/React.createElement(ChromePicker, {\n      color: store.fontColorState,\n      onChangeComplete: this.handleChangeComplete\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font_display_controller\"\n    })))))))), /*#__PURE__*/React.createElement(\"style\", {\n      jsx: \"true\",\n      global: \"true\",\n      suppressHydrationWarning: true\n    }, `\n                        @font-face {\n                            font-family: \"Earth_FinalGX\";\n                            src: url(/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                          }\n                          `));\n  }\n\n}, _temp)) || _class;\n\nexport default Header;","map":{"version":3,"sources":["/Users/nough/Desktop/font_pjh_site/components/Header.js"],"names":["React","Component","Router","App","observable","observer","Slider","VerticalSlider","HorizontalSlider","SVG","ChromePicker","moment","store","Backdrop","Header","constructor","props","fontWeightTimer","setInterval","directionFontWeight","fontWeightState","unitFontWeight","maxFontWeight","fontSizeState","minFontSize","secondFontWeight","fontSizeTimer","directionFontSize","unitFontSize","maxFontSize","secondFontSize","fontLetterTimer","directionFontLetterSpacing","fontLetterSpacingState","unitFontLetterSpacing","maxFontLetterSpacing","minFontLetterSpacing","secondFontLetterSpacing","fontLineTimer","directionFontLineSpacing","fontLineSpacingState","unitFontLineSpacing","maxFontLineSpacing","minFontLineSpacing","secondFontLineSpacing","handleChangeComplete","color","fontColorState","hex","handleFontSizeChange","event","handleFontWeightChange","handleFontLetterSpacingChange","handleFontLineSpacingChange","_toggleFontSizeAuto","undefined","isFontSizeAuto","clearInterval","_toggleFontWeightAuto","isFontWeightAuto","_toggleFontLetterSpacingAuto","isFontLetterSpacingAuto","_toggleFontLineSpacingAuto","isFontLineSpacingAuto","_bannerGoItem","index","setState","index_banner_content","startCount","toogleSwitchState","param_onoff","timer","is_banner_animation","state","_goPage","paramRouterName","paramQuery","push","pathname","__togglePlayAll","isPlayAll","__toggleResetAll","defaultFontSizeState","defaultFontWeightState","defaultFontLetterSpacingState","defaultFontLineSpacingState","defaultFontColorState","fontState","defaultFontState","__toggleSecond","param","console","log","unit","layoutMode","input_content","footerGap","onResize","bind","getInitialProps","query","componentDidMount","stored_token","window","addEventListener","wrapper","document","getElementById","mobile_drawer_menu","mobile_drawer_menu_left","icon","getElementsByClassName","classList","toggle","componentWillUnmount","_bannerChange","removeEventListener","getLayoutMode","innerWidth","render","path","token","position","width","display","alignSelf","left","transform","fontFamily","height","fontWeight","textDecoration","marginTop","marginLeft","fontSize","alignItems","justifyContent","maxWidth","marginBottom","backgroundColor","borderRadius","handleChangeStart","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Router from 'next/router';\nimport App from 'next/app'\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport Slider from 'react-rangeslider'\nimport VerticalSlider from \"../components/VerticalSlider\";\nimport HorizontalSlider from \"../components/HorizontalSlider\";\nimport SVG from '../components/SVG';\n\n\nimport { ChromePicker } from 'react-color'; \nimport moment from 'moment';\nimport store from \"../common/store\";\n\nimport Backdrop from './Backdrop';\n\n\n@observer\nclass Header extends App {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            layoutMode: 'desktop',\n            input_content : 'ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqestuvwxyz  ',\n\n            footerGap : 200, \n\n            fontSizeState : 50,\n            fontWeightState: 300,\n            fontLetterSpacingState : 0,\n            fontLineSpacingState: 0.85,\n            fontColorState : '#000',\n            fontState : null,\n\n            isFontSizeAuto : false,\n            isFontWeightAuto : false,\n            isFontLetterSpacingAuto : false,\n            isFontLineSpacingAuto : false,\n        };\n\n        this.onResize = this.onResize.bind(this);\n    }\n    static async getInitialProps(props) {\n        const { query } = props;\n        // const { token, refreshToken } = query;\n        \n    }\n\n    componentDidMount() {\n\n        var stored_token = ''\n\n        window.addEventListener('resize', this.onResize);\n        const wrapper = document.getElementById(\"wrapper\");\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const mobile_drawer_menu_left = document.getElementById(\"mobile_drawer_menu_left\");\n        const icon = document.getElementsByClassName(\"icon\");\n        wrapper.addEventListener('click',  () => {\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n        mobile_drawer_menu_left.addEventListener('click',  () => {\n            icon[0].classList.toggle('close');\n            mobile_drawer_menu.classList.toggle('open');\n        });\n\n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n    }\n\n    componentWillUnmount () {\n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n    }\n\n    fontWeightTimer = setInterval( () => { \n        if (store.directionFontWeight == 'positive') {\n            store.fontWeightState = store.fontWeightState + store.unitFontWeight\n        } else {\n            store.fontWeightState = store.fontWeightState - store.unitFontWeight\n        }\n\n        if (store.fontWeightState == store.maxFontWeight) {\n            store.directionFontWeight = 'negative'\n        } \n        \n        if (store.fontSizeState == store.minFontSize) {\n            store.directionFontWeight = 'positive'\n        } \n        \n    }, store.secondFontWeight);\n    fontSizeTimer = setInterval( () => { \n        if (store.directionFontSize == 'positive') {\n            store.fontSizeState = store.fontSizeState + store.unitFontSize\n        } else {\n            store.fontSizeState = store.fontSizeState - store.unitFontSize\n        }\n\n        if (store.fontSizeState == store.maxFontSize) {\n            store.directionFontSize = 'negative'\n        } \n        \n        if (store.fontSizeState == store.minFontSize) {\n            store.directionFontSize = 'positive'\n        } \n        \n    }, store.secondFontSize);\n\n\n    fontLetterTimer = setInterval( () => { \n        if (store.directionFontLetterSpacing == 'positive') {\n            store.fontLetterSpacingState = store.fontLetterSpacingState + store.unitFontLetterSpacing\n        } else {\n            store.fontLetterSpacingState = store.fontLetterSpacingState - store.unitFontLetterSpacing\n        }\n\n        if (store.fontLetterSpacingState >= store.maxFontLetterSpacing) {\n            store.directionFontLetterSpacing = 'negative'\n        } \n        \n        if (store.fontLetterSpacingState <= store.minFontLetterSpacing) {\n            store.directionFontLetterSpacing = 'positive'\n        } \n        \n    }, store.secondFontLetterSpacing);\n\n    fontLineTimer = setInterval( () => { \n        if (store.directionFontLineSpacing == 'positive') {\n            store.fontLineSpacingState = store.fontLineSpacingState + store.unitFontLineSpacing\n        } else {\n            store.fontLineSpacingState = store.fontLineSpacingState - store.unitFontLineSpacing\n        }\n\n        if (store.fontLineSpacingState >= store.maxFontLineSpacing) {\n            store.directionFontLineSpacing = 'negative'\n        } \n        \n        if (store.fontLineSpacingState <= store.minFontLineSpacing) {\n            store.directionFontLineSpacing = 'positive'\n        } \n        \n    }, store.secondFontLineSpacing);\n\n\n\n    handleChangeComplete = (color) => {\n        // this.setState({ fontColorState: color.hex });\n        store.fontColorState = color.hex;\n      };\n    \n\n      handleFontSizeChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({ fontSizeState: event  })\n        store.fontSizeState = event;\n      };\n      handleFontWeightChange = event => {\n        // this.setState({  fontWeightState: value  })\n        store.fontWeightState = event;\n      };\n\n\n      handleFontLetterSpacingChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({  fontLetterSpacingState: event  })\n        store.fontLetterSpacingState = event;\n      };\n\n\n      handleFontLineSpacingChange = event => {\n        //   console.log(event.target.value);\n        // this.setState({ fontLineSpacingState: event  })\n        store.fontLineSpacingState = event;\n      };\n\n      _toggleFontSizeAuto  = event => {\n    // minFontSize\n    // maxFontSize\n    // unitFontSize\n    // directionFontSize\n        if (event == null || event === undefined) {\n            // this.setState({ isFontSizeAuto: !this.state.isFontSizeAuto }) \n            if (store.isFontSizeAuto == true) {\n                clearInterval(this.fontSizeTimer);\n            } else {\n                clearInterval(this.fontSizeTimer);\n                setInterval(this.fontSizeTimer);\n            }\n            store.isFontSizeAuto = !store.isFontSizeAuto;\n        } else {\n            if (event == true) {\n                // this.setState({ isFontSizeAuto: true }) \n                store.isFontSizeAuto = true;\n            } else {\n                // this.setState({ isFontSizeAuto: false  }) \n                store.isFontSizeAuto = false;\n\n            }\n        } \n      }\n\n\n      _toggleFontWeightAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({  isFontWeightAuto: !this.state.isFontWeightAuto }) \n            if (store.isFontWeightAuto == true) {\n                clearInterval(this.fontWeightTimer);\n            } else {\n                clearInterval(this.fontWeightTimer);\n                setInterval(this.fontWeightTimer);\n            }\n            store.isFontWeightAuto = !store.isFontWeightAuto\n        } else {\n            if (event == true) {\n                // this.setState({ isFontWeightAuto: true }) \n                store.isFontWeightAuto = true\n            } else {\n                // this.setState({   isFontWeightAuto: false }) \n                store.isFontWeightAuto = false\n            }\n        } \n      }\n\n      _toggleFontLetterSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({ isFontLetterSpacingAuto: !this.state.isFontLetterSpacingAuto }) \n            if (store.isFontLetterSpacingAuto == true) {\n                clearInterval(this.fontLetterTimer);\n            } else {\n                clearInterval(this.fontLetterTimer);\n                setInterval(this.fontLetterTimer);\n            }\n            store.isFontLetterSpacingAuto = !store.isFontLetterSpacingAuto\n        } else {\n            if (event == true) {\n                // this.setState({ isFontLetterSpacingAuto: true }) \n                store.isFontLetterSpacingAuto = true;\n            } else {\n                // this.setState({  isFontLetterSpacingAuto: false }) \n                store.isFontLetterSpacingAuto = false;\n            }\n        } \n      }\n\n      _toggleFontLineSpacingAuto  = event => {\n\n        if (event == null || event === undefined) {\n            // this.setState({  isFontLineSpacingAuto: !this.state.isFontLineSpacingAuto }) \n            if (store.isFontLineSpacingAuto == true) {\n                clearInterval(this.fontLineTimer);\n            } else {\n                clearInterval(this.fontLineTimer);\n                setInterval(this.fontLineTimer);\n            }\n            store.isFontLineSpacingAuto = !store.isFontLineSpacingAuto;\n        } else {\n            if (event == true) {\n                // this.setState({ isFontLineSpacingAuto: true  }) \n                store.isFontLineSpacingAuto = true;\n            } else { \n                // this.setState({ isFontLineSpacingAuto: false  }) \n                store.isFontLineSpacingAuto = false;\n            }\n        } \n      }\n\n\n\n    _bannerGoItem = (index) => {\n        this.setState({\n            index_banner_content: index\n        });\n        this.startCount();\n    }\n\n      startCount() {\n        // this.setState({\n        //   isOn: true,\n        //   count: 0\n        // });\n        clearInterval(this.timer);\n        this.timer = setInterval( () => { \n            this._bannerChange();\n        }, 5000);\n      }\n      \n  toogleSwitchState = (param_onoff) => {\n    clearInterval(this.timer);\n\n    if (param_onoff == true) {\n\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n        return;\n    } \n\n    \n    if (param_onoff == false) {\n\n        this.setState({ is_banner_animation: false })\n        return;\n    } \n\n    \n\n    if (this.state.is_banner_animation == false) {\n        this.startCount();\n        this.setState({ is_banner_animation: true })\n    } else {\n        this.setState({ is_banner_animation: false })\n        //geolocation.stopObserving();\n    }\n  }\n\n\n\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize() {\n        this.setState({\n            layoutMode: this.getLayoutMode(),\n        });\n        const mobile_drawer_menu = document.getElementById(\"mobile_drawer_menu\");\n        const icon = document.getElementsByClassName(\"icon\");\n    }\n\n    getLayoutMode() {\n        return window.innerWidth > 1200 ?\n            'desktop'\n            : 'non-desktop';\n    }\n\n\n    _goPage = (paramRouterName, paramQuery) => {\n        // import Router from 'next/router';\n        // import { withRouter } from 'next/router' //  retrieve the query via the router props, which needs to be injected to Component by using withRouter.\n        Router.push({\n        pathname: paramRouterName,\n        // query: { tab : paramQuery }\n        });\n    };\n\n    __togglePlayAll = () => {\n        if ( store.isPlayAll == true ) {\n            store.isPlayAll = false\n            store.isFontSizeAuto = false;\n            store.isFontWeightAuto = false;\n            store.isFontLineSpacingAuto = false;\n            store.isFontLetterSpacingAuto = false;\n\n            if (this.fontSizeTimer) {\n                clearInterval(this.fontSizeTimer);\n            }\n            if (this.fontWeightTimer) {\n                clearInterval(this.fontWeightTimer);\n            }\n            if (this.fontLetterTimer) {\n                clearInterval(this.fontLetterTimer);\n            }\n            if (this.fontLineTimer) {\n                clearInterval(this.fontLineTimer);\n            }\n            \n        } else {\n            store.isPlayAll = true\n\n        }\n    }\n    __toggleResetAll  = () => {\n\n\n        store.isPlayAll = false;\n        store.fontSizeState = store.defaultFontSizeState;\n        store.fontWeightState = store.defaultFontWeightState;\n        store.fontLetterSpacingState = store.defaultFontLetterSpacingState;\n        store.fontLineSpacingState = store.defaultFontLineSpacingState;\n        store.fontColorState = store.defaultFontColorState;\n        store.fontState = store.defaultFontState;\n\n        store.isPlayAll = false\n        store.isFontSizeAuto = false;\n        store.isFontWeightAuto = false;\n        store.isFontLineSpacingAuto = false;\n        store.isFontLetterSpacingAuto = false;\n\n\n        store.directionFontSize = 'positive'; // negative;\n        store.secondFontSize = 100;\n        store.directionFontWeight = 'positive'; // negative;\n        store.secondFontWeight = 100;\n        store.directionFontLetterSpacing = 'positive'; // negative;\n        store.secondFontLetterSpacing  = 100;\n        store.directionFontLineSpacing = 'positive'; // negative;\n        store.secondFontLineSpacing  = 100;\n        \n        if (this.fontSizeTimer) {\n            clearInterval(this.fontSizeTimer);\n        }\n        if (this.fontWeightTimer) {\n            clearInterval(this.fontWeightTimer);\n        }\n        if (this.fontLetterTimer) {\n            clearInterval(this.fontLetterTimer);\n        }\n        if (this.fontLineTimer) {\n            clearInterval(this.fontLineTimer);\n        }\n    }\n\n\n    __toggleSecond = (param) => {\n        console.log('__toggleSecond');\n        var unit = 0;\n        param == 'font/size' ? unit = store.secondFontSize : null;\n        param == 'font/weight' ? unit = store.secondFontWeight : null;\n        param == 'font/letter-spacing' ? unit = store.secondFontLetterSpacing : null;\n        param == 'font/line-spacing' ? unit = store.secondFontLineSpacing : null;\n        \n        if (unit == 100 ) {unit = 200 } \n        else if (unit == 200 ) {unit = 300 } \n        else if (unit == 300 ) {unit = 100 } \n        \n        param == 'font/size' ? store.secondFontSize = unit : null;\n        param == 'font/weight' ?  store.secondFontWeight = unit : null;\n        param == 'font/letter-spacing' ?  store.secondFontLetterSpacing = unit : null;\n        param == 'font/line-spacing' ?  store.secondFontLineSpacing = unit : null;\n\n    }\n\n\n    render() {\n        const { path } = this.props;\n        const stored_token = store.token\n\n        return (\n            <>\n            <style \n                jsx=\"true\"\n                global=\"true\" \n                suppressHydrationWarning>{`\n\n                a:link {color: black;}      /* unvisited link */\n                a:visited {color: black;}   /* visited link */\n                a:hover {color: black;}     /* mouse over link */\n                a:active {color: black;}    /* selected link */\n\n                #wrapper {\n                    display:inline-block;\n                    border-radius:50px;\n                    margin:10px;\n                    position: relative;\n                    padding:4px;\n                    cursor:pointer;\n                    z-index: 9999;\n                }\n                .circle {\n                    width:30px;\n                    height:30px;\n                    position:relative;\n                    z-index: 9999;\n                }\n                .line {\n                    position: absolute;\n                    height: 3px;\n                    width:100%;\n                    background: #000;\n                    border-radius:2px;\n                    transition: all cubic-bezier(0.26, 0.1, 0.27, 1.55) 0.35s;\n                }\n                .top {\n                    top:18%;\n                }\n                .middle {\n                    top:48%;\n                }\n                .bottom {\n                    top:78%;\n                }\n                .icon.close .top {\n                    transform:rotate(45deg);\n                    top:48%;\n                }\n                .icon.close .middle, .icon.close .bottom {\n                    transform:rotate(-45deg);\n                    top:48%;\n                }\n                .mobile_drawer_menu {\n                    position : fixed;\n                    display: none;\n                    flex-direction : row;\n                    width: 100%;\n                    height: 100%;\n                    left: 0%;\n                    top: 0;\n                    align-items: center;\n                    justify-content: center;\n                    background: rgba(0, 0, 0, 0.3);\n                    z-index: 9998;\n                }\n                .mobile_drawer_menu_left {\n                    width: calc(100% - 400px);\n                    height: 100%;\n                }\n\n                .mobile_drawer_menu_inner {\n                    width: 400px;\n                    height: 100%;\n                    min-width: 200px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: flex-start;\n                    justify-content: flex-start;\n                    background-color: #fff;\n                    z-index: 9999;\n                }\n                \n\n                .mobile_drawer_menu.open {\n                    display: flex;\n                }\n                .cs-drawer-item {\n\n                    width: auto;\n                    height: 24px;\n                    font-size: 16px;\n                    font-style: normal;\n                    line-height: 1.5;\n                    letter-spacing: -0.64px;\n                    text-align: left;\n                    color: rgba(0, 0, 0, 0.6);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    text-align: center;\n                    margin-left: 24px;  \n                    margin-top: 16px;   \n                }\n                .slider-common {\n                    width: calc(100% - 40px);\n                }\n                .rangeslider-horizontal .rangeslider__fill {\n                    height: 100%;\n                    background-color: #000;\n                    border-radius: 10px;\n                    top: 0;\n                }\n                .rangeslider {\n                    margin: 8px 0;\n                    position: relative;\n                    background: #e6e6e6;\n                    -ms-touch-action: none;\n                    touch-action: none;\n                    }\n                .rangeslider {\n                    max-height: 30px;\n                }\n                .rangeslider-horizontal .rangeslider__handle {\n                    width: 10px;\n                    height: 10px;\n                    border-radius: 10px;\n                    top: 50%;\n                    transform: translate3d(-50%,-50%,0);\n                    }\n                .rangeslider-horizontal {\n                    height: 6px;\n                    border-radius: 10px;\n                    }\n                    .rangeslider-horizontal .rangeslider__handle:after {\n                        content: '',\n                        position: absolute;\n                        width: 0px;\n                        height: 0px;\n                        top: 6px;\n                        left: 6px;\n                        border-radius: 50%;\n                        background-color: #dadada;\n                        box-shadow: 0 1px 3px rgba(0,0,0,.4) inset,0 -1px 3px rgba(0,0,0,.4) inset;\n                        }\n                /* Extra small devices (phones, 400px and down) */\n                @media only screen and (min-width: 400px) {\n                    /* ... */\n                    .mobile_drawer_menu.open {\n                        display: flex;\n                    }\n                  }\n                /* Extra small devices (phones, 600px and down) */\n                @media only screen and (max-width: 400px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Small devices (portrait tablets and large phones, 600px and up) */\n                @media only screen and (min-width: 600px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Medium devices (landscape tablets, 768px and up) */\n                @media only screen and (min-width: 768px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Large devices (laptops/desktops, 992px and up) */\n                @media only screen and (min-width: 992px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                      display: flex;\n                  }\n                }\n                /* Extra large devices (large laptops and desktops, 1200px and up) */\n                @media only screen and (min-width: 1200px) {\n                  /* ... */\n                  .mobile_drawer_menu.open {\n                    display: flex;\n                  }\n                }\n            `}</style>\n            <div id=\"header\">\n                <div className=\"header-wrapper is_desktop_laptop_tablet_phone_xsmall_xxsmall  max-width-wrapper\">\n                    <div className=\"header-left\">\n                    </div>\n                    <div \n                    style={{\n                        position: 'absolute',\n                        width: 'auto',\n                        display: 'flex',\n                        alignSelf: 'center',\n                        left: '50%',\n                        transform: 'translate(-50%, 0%)',\n                    }}>\n                        <a href=\"/\" style={{ \n                                fontFamily: \"Earth_FinalGX\",}} >\n                            PARK JUNG HYO.\n                        </a>\n                    </div>\n                    <div className=\"header-right\">\n                        <div id=\"wrapper\">\n                            <div className=\"circle icon\">\n                                <span className=\"line top\"></span>\n                                <span className=\"line middle\"></span>\n                                <span className=\"line bottom\"></span>\n                            </div>\n                        </div>\n                        {/* Drawer 메뉴 */}\n                        <div id=\"mobile_drawer_menu\" \n                        className=\"mobile_drawer_menu\" >\n                            <div id=\"mobile_drawer_menu_left\" style={{ width: 'calc(100% - 400px)', height: '100%'}}></div>\n                            <div  className=\"mobile_drawer_menu_inner\">\n\n                            <div id=\"menu-item-1\" \n                            className=\"menu-item cursor_pointer not_draggable\" \n                            style={{ \n                                fontFamily: \"Earth_FinalGX\",\n                                color : path === '/' ? '#f84300' : 'rgba(0, 0, 0, 0.6)',\n                                fontWeight: path === '/' ? '600' : '500',\n                                textDecoration: path === '/' ? 'underline' : 'none',\n                                marginTop : 80,\n                                marginLeft : 24,\n                                }}\n                                onClick={()=> {\n                                    this._goPage('/');\n                                }}\n                            >\n                                    PARK JUNG HYO's 1st Planet : Earth\n                            </div>\n                            \n                    <div >\n\n                        <div  \n                            style={{  \n                                fontSize : 20, \n                                display: 'flex', \n                                alignItems: 'flex-start', \n                                justifyContent: 'center', \n                                maxWidth: 400,\n                                marginLeft: 40,\n                                marginTop: 50, \n                            }}>\n                                <div >\n\n                                <div style={{ width: '100%', display : 'flex', marginBottom: 20, }}>\n\n                                    <div\n                                        style={{  fontFamily: 'Earth_FinalGX' , \n                                        width: 80,\n                                        height: 20, \n                                            fontSize: 10, \n                                            fontWeight: 700,\n                                            backgroundColor: store.isPlayAll == true ? '#000' : '#E4E4E4',\n                                            color : store.isPlayAll == true ? '#fff' : '#000',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius : 8,\n                                            \n                                        }}\n                                        onClick={()=> {\n                                            this.__togglePlayAll()\n                                        }}\n                                        >\n                                        {store.isPlayAll == true ? 'Pause all' : 'Play all'}\n                                    </div>\n                                    <div\n                                        style={{  fontFamily: 'Earth_FinalGX' , \n                                        width: 80,\n                                        height: 20, \n                                            fontSize: 10, \n                                            fontWeight: 700,\n                                            backgroundColor: '#E4E4E4',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            marginLeft: 8,\n                                            borderRadius : 8,\n                                        }}\n                                        onClick={()=> {\n                                            this.__toggleResetAll()\n                                        }}\n                                        >\n                                        Reset\n                                    </div>\n                                    \n                                </div>\n\n                                <div \n                                    style={{  fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                    }}>\n                                        Font Size\n                                        <Slider\n                                        min={0}\n                                        max={100}\n                                        value={store.fontSizeState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontSizeChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontSizeState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontSizeAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontSizeAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontSizeAuto();\n                                            }}\n                                            >\n                                                {store.isFontSizeAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            {/* store.secondFontSize */}\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                                onClick={()=> {\n                                                    this.__toggleSecond('font/size')\n                                                }}\n                                            >\n                                            {store.secondFontSize == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontSize == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontSize == 300 ? \"x3\"  : \"\"}\n                                                \n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                    </div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        marginTop: 20}}>\n                                        Font Weight\n                                        \n                                        <Slider\n                                        min={100}\n                                        max={900}\n                                        value={store.fontWeightState}\n                                        style={{ color: '#000'}}\n                                        onChangeStart={this.handleChangeStart}\n                                        onChange={this.handleFontWeightChange}\n                                        />\n                                        <div className='auto_row'>\n                                            <div className=\"font_value\">{store.fontWeightState}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontWeightAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontWeightAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontWeightAuto();\n                                            }}\n                                            >\n                                            {store.isFontWeightAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n\n                                                this.__toggleSecond('font/weight')\n                                            }}\n                                            >\n                                            {store.secondFontWeight == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontWeight == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontWeight == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div \n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        marginTop: 20,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        }}>\n                                        Letter Spacing\n                                        \n                                        <Slider\n                                        min={-0.1}\n                                        max={0.2}\n                                        value={store.fontLetterSpacingState}\n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLetterSpacingChange}\n                                        step={0.01}\n                                        />\n                                        <div className='auto_row'>\n\n                                            <div className=\"font_value\">\n                                            {store.fontLetterSpacingState.toFixed(2)}</div>\n                                            <div \n                                            style={{ \n                                                backgroundColor: store.isFontLetterSpacingAuto ? '#000' : '#E4E4E4',\n                                                color : store.isFontLetterSpacingAuto ? '#fff' : '#000',\n                                                width: 80,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 8,\n                                                fontSize: 10,\n                                            }}\n                                            onClick={()=> {\n                                                this._toggleFontLetterSpacingAuto();\n                                            }}\n                                            >\n                                            {store.isFontLetterSpacingAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n                                                this.__toggleSecond('font/letter-spacing')\n                                            }}\n                                            >\n                                            {store.secondFontLetterSpacing == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontLetterSpacing == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontLetterSpacing == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX' , \n                                        maxWidth: 225,\n                                        marginTop: 20,\n                                        fontSize: 10, \n                                        fontWeight: 700,\n                                        }}>\n                                        Line Spacing\n                                        <Slider\n                                        min={0.85}\n                                        max={1.5}\n                                        value={store.fontLineSpacingState}\n                                        step={0.01} \n                                        style={{ color: '#000'}}\n                                        onChange={this.handleFontLineSpacingChange}\n                                        />\n                                        <div className='auto_row'>\n                                        <div className=\"font_value\">{store.fontLineSpacingState.toFixed(2)}</div>\n                                            \n                                        <div \n                                        style={{ \n                                            backgroundColor: store.isFontLineSpacingAuto ? '#000' : '#E4E4E4',\n                                            color : store.isFontLineSpacingAuto ? '#fff' : '#000',\n                                            width: 80,\n                                            height: 20, \n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius : 8,\n                                            fontSize: 10,\n                                        }}\n                                        \n                                        onClick={()=> {\n                                            this._toggleFontLineSpacingAuto();\n                                        }}\n                                        >\n                                            {store.isFontLineSpacingAuto ? 'Pause' : 'Play'}\n                                            </div>\n                                            \n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}\n                                            onClick={()=> {\n                                                this.__toggleSecond('font/line-spacing')\n                                            }}\n                                            >\n                                            {store.secondFontLineSpacing == 100 ? \"x1\"  : \"\"}\n                                            {store.secondFontLineSpacing == 200 ? \"x2\"  : \"\"}\n                                            {store.secondFontLineSpacing == 300 ? \"x3\"  : \"\"}\n                                            </div>\n                                            <div style={{ \n                                                backgroundColor: '#E4E4E4',\n                                                color : '#000',\n                                                width: 20,\n                                                height: 20, \n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                borderRadius : 10,\n                                                fontSize: 10,\n                                                marginLeft: 5\n                                            }}>\n                                                ?\n                                            </div>\n                                            </div>\n                                    </div>\n\n\n                                    <div\n                                    style={{  \n                                        fontFamily: 'Earth_FinalGX',\n                                        fontSize: 10,  \n                                        marginBottom: 10, \n                                        fontWeight: 700,\n                                    }}>Color\n                                        <br/>\n                                    </div>\n                                        <ChromePicker\n                                            color={ store.fontColorState }\n                                            onChangeComplete={ this.handleChangeComplete }\n                                            \n                                        />\n                                </div>\n                                \n                            <div className=\"font_display_controller\"></div>\n                        </div>\n                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <style \n            jsx=\"true\"\n            global=\"true\"\n            suppressHydrationWarning>\n                {`\n                        @font-face {\n                            font-family: \"Earth_FinalGX\";\n                            src: url(/static/fonts/Earth_FinalGX.ttf) format(\"truetype\");\n                          }\n                          `}\n                          </style>\n            </>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}